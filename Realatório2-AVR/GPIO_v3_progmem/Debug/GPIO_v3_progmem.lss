
GPIO_v3_progmem.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000016  00800200  00000a1a  00000aae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a1a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000012  00800216  00800216  00000ac4  2**0
                  ALLOC
  3 .stab         000015cc  00000000  00000000  00000ac4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001235  00000000  00000000  00002090  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000032c5  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000032d8  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	b9 c0       	rjmp	.+370    	; 0x174 <__dtors_end>
   2:	00 00       	nop
   4:	e5 c0       	rjmp	.+458    	; 0x1d0 <__bad_interrupt>
   6:	00 00       	nop
   8:	e3 c0       	rjmp	.+454    	; 0x1d0 <__bad_interrupt>
   a:	00 00       	nop
   c:	e1 c0       	rjmp	.+450    	; 0x1d0 <__bad_interrupt>
   e:	00 00       	nop
  10:	df c0       	rjmp	.+446    	; 0x1d0 <__bad_interrupt>
  12:	00 00       	nop
  14:	dd c0       	rjmp	.+442    	; 0x1d0 <__bad_interrupt>
  16:	00 00       	nop
  18:	db c0       	rjmp	.+438    	; 0x1d0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	d9 c0       	rjmp	.+434    	; 0x1d0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	d7 c0       	rjmp	.+430    	; 0x1d0 <__bad_interrupt>
  22:	00 00       	nop
  24:	d5 c0       	rjmp	.+426    	; 0x1d0 <__bad_interrupt>
  26:	00 00       	nop
  28:	d3 c0       	rjmp	.+422    	; 0x1d0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	d1 c0       	rjmp	.+418    	; 0x1d0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	cf c0       	rjmp	.+414    	; 0x1d0 <__bad_interrupt>
  32:	00 00       	nop
  34:	cd c0       	rjmp	.+410    	; 0x1d0 <__bad_interrupt>
  36:	00 00       	nop
  38:	cb c0       	rjmp	.+406    	; 0x1d0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	c9 c0       	rjmp	.+402    	; 0x1d0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	c7 c0       	rjmp	.+398    	; 0x1d0 <__bad_interrupt>
  42:	00 00       	nop
  44:	c5 c0       	rjmp	.+394    	; 0x1d0 <__bad_interrupt>
  46:	00 00       	nop
  48:	c3 c0       	rjmp	.+390    	; 0x1d0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	c1 c0       	rjmp	.+386    	; 0x1d0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	bf c0       	rjmp	.+382    	; 0x1d0 <__bad_interrupt>
  52:	00 00       	nop
  54:	bd c0       	rjmp	.+378    	; 0x1d0 <__bad_interrupt>
  56:	00 00       	nop
  58:	bb c0       	rjmp	.+374    	; 0x1d0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	b9 c0       	rjmp	.+370    	; 0x1d0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	b7 c0       	rjmp	.+366    	; 0x1d0 <__bad_interrupt>
  62:	00 00       	nop
  64:	b5 c0       	rjmp	.+362    	; 0x1d0 <__bad_interrupt>
  66:	00 00       	nop
  68:	b3 c0       	rjmp	.+358    	; 0x1d0 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	b1 c0       	rjmp	.+354    	; 0x1d0 <__bad_interrupt>
  6e:	00 00       	nop
  70:	af c0       	rjmp	.+350    	; 0x1d0 <__bad_interrupt>
  72:	00 00       	nop
  74:	ad c0       	rjmp	.+346    	; 0x1d0 <__bad_interrupt>
  76:	00 00       	nop
  78:	ab c0       	rjmp	.+342    	; 0x1d0 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	a9 c0       	rjmp	.+338    	; 0x1d0 <__bad_interrupt>
  7e:	00 00       	nop
  80:	a7 c0       	rjmp	.+334    	; 0x1d0 <__bad_interrupt>
  82:	00 00       	nop
  84:	a5 c0       	rjmp	.+330    	; 0x1d0 <__bad_interrupt>
  86:	00 00       	nop
  88:	a3 c0       	rjmp	.+326    	; 0x1d0 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	a1 c0       	rjmp	.+322    	; 0x1d0 <__bad_interrupt>
  8e:	00 00       	nop
  90:	9f c0       	rjmp	.+318    	; 0x1d0 <__bad_interrupt>
  92:	00 00       	nop
  94:	9d c0       	rjmp	.+314    	; 0x1d0 <__bad_interrupt>
  96:	00 00       	nop
  98:	9b c0       	rjmp	.+310    	; 0x1d0 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	99 c0       	rjmp	.+306    	; 0x1d0 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	97 c0       	rjmp	.+302    	; 0x1d0 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	95 c0       	rjmp	.+298    	; 0x1d0 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	93 c0       	rjmp	.+294    	; 0x1d0 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	91 c0       	rjmp	.+290    	; 0x1d0 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	8f c0       	rjmp	.+286    	; 0x1d0 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	8d c0       	rjmp	.+282    	; 0x1d0 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	8b c0       	rjmp	.+278    	; 0x1d0 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	89 c0       	rjmp	.+274    	; 0x1d0 <__bad_interrupt>
  be:	00 00       	nop
  c0:	87 c0       	rjmp	.+270    	; 0x1d0 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	85 c0       	rjmp	.+266    	; 0x1d0 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	83 c0       	rjmp	.+262    	; 0x1d0 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	81 c0       	rjmp	.+258    	; 0x1d0 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	7f c0       	rjmp	.+254    	; 0x1d0 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	7d c0       	rjmp	.+250    	; 0x1d0 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	7b c0       	rjmp	.+246    	; 0x1d0 <__bad_interrupt>
  da:	00 00       	nop
  dc:	79 c0       	rjmp	.+242    	; 0x1d0 <__bad_interrupt>
  de:	00 00       	nop
  e0:	77 c0       	rjmp	.+238    	; 0x1d0 <__bad_interrupt>
	...

000000e4 <_ZN9GPIO_PORT10id_to_portE>:
  e4:	04 04 04 04 06 04 07 07 07 07 01 01 01 01 08 08     ................
  f4:	07 07 03 03 03 03 00 00 00 00 00 00 00 00 02 02     ................
 104:	02 02 02 02 02 02 03 06 06 06 0a 0a 0a 0a 0a 0a     ................
 114:	0a 0a 01 01 01 01 00 00 00 00 00 00 00 00 00 00     ................
 124:	00 00 00 00 00 00                                   ......

0000012a <_ZN9GPIO_PORT9id_to_bitE>:
 12a:	01 02 10 20 20 08 08 10 20 40 10 20 40 80 02 01     ...  ... @. @...
 13a:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 80 40     ........... @..@
 14a:	20 10 08 04 02 01 80 04 02 01 80 40 20 10 08 04      ..........@ ...
 15a:	02 01 08 04 02 01 01 02 04 08 10 20 40 80 01 02     ........... @...
 16a:	04 08 10 20 40 80                                   ... @.

00000170 <__ctors_start>:
 170:	d0 03       	fmuls	r21, r16

00000172 <__ctors_end>:
 172:	dc 03       	fmulsu	r21, r20

00000174 <__dtors_end>:
 174:	11 24       	eor	r1, r1
 176:	1f be       	out	0x3f, r1	; 63
 178:	cf ef       	ldi	r28, 0xFF	; 255
 17a:	d1 e2       	ldi	r29, 0x21	; 33
 17c:	de bf       	out	0x3e, r29	; 62
 17e:	cd bf       	out	0x3d, r28	; 61
 180:	00 e0       	ldi	r16, 0x00	; 0
 182:	0c bf       	out	0x3c, r16	; 60

00000184 <__do_copy_data>:
 184:	12 e0       	ldi	r17, 0x02	; 2
 186:	a0 e0       	ldi	r26, 0x00	; 0
 188:	b2 e0       	ldi	r27, 0x02	; 2
 18a:	ea e1       	ldi	r30, 0x1A	; 26
 18c:	fa e0       	ldi	r31, 0x0A	; 10
 18e:	00 e0       	ldi	r16, 0x00	; 0
 190:	0b bf       	out	0x3b, r16	; 59
 192:	02 c0       	rjmp	.+4      	; 0x198 <__do_copy_data+0x14>
 194:	07 90       	elpm	r0, Z+
 196:	0d 92       	st	X+, r0
 198:	a6 31       	cpi	r26, 0x16	; 22
 19a:	b1 07       	cpc	r27, r17
 19c:	d9 f7       	brne	.-10     	; 0x194 <__do_copy_data+0x10>

0000019e <__do_clear_bss>:
 19e:	22 e0       	ldi	r18, 0x02	; 2
 1a0:	a6 e1       	ldi	r26, 0x16	; 22
 1a2:	b2 e0       	ldi	r27, 0x02	; 2
 1a4:	01 c0       	rjmp	.+2      	; 0x1a8 <.do_clear_bss_start>

000001a6 <.do_clear_bss_loop>:
 1a6:	1d 92       	st	X+, r1

000001a8 <.do_clear_bss_start>:
 1a8:	a8 32       	cpi	r26, 0x28	; 40
 1aa:	b2 07       	cpc	r27, r18
 1ac:	e1 f7       	brne	.-8      	; 0x1a6 <.do_clear_bss_loop>

000001ae <__do_global_ctors>:
 1ae:	10 e0       	ldi	r17, 0x00	; 0
 1b0:	c9 eb       	ldi	r28, 0xB9	; 185
 1b2:	d0 e0       	ldi	r29, 0x00	; 0
 1b4:	00 e0       	ldi	r16, 0x00	; 0
 1b6:	05 c0       	rjmp	.+10     	; 0x1c2 <__do_global_ctors+0x14>
 1b8:	21 97       	sbiw	r28, 0x01	; 1
 1ba:	01 09       	sbc	r16, r1
 1bc:	80 2f       	mov	r24, r16
 1be:	fe 01       	movw	r30, r28
 1c0:	07 d3       	rcall	.+1550   	; 0x7d0 <__tablejump2__>
 1c2:	c8 3b       	cpi	r28, 0xB8	; 184
 1c4:	d1 07       	cpc	r29, r17
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	08 07       	cpc	r16, r24
 1ca:	b1 f7       	brne	.-20     	; 0x1b8 <__do_global_ctors+0xa>
 1cc:	13 d1       	rcall	.+550    	; 0x3f4 <main>
 1ce:	14 c4       	rjmp	.+2088   	; 0x9f8 <__do_global_dtors>

000001d0 <__bad_interrupt>:
 1d0:	17 cf       	rjmp	.-466    	; 0x0 <__vectors>

000001d2 <_ZN4GPIOC1EhNS_15PortDirection_tE>:
 */

#include "GPIO.h"
#include <avr/pgmspace.h>

GPIO::GPIO(uint8_t id, PortDirection_t dir)
 1d2:	cf 93       	push	r28
 1d4:	df 93       	push	r29
 1d6:	cd b7       	in	r28, 0x3d	; 61
 1d8:	de b7       	in	r29, 0x3e	; 62
 1da:	2a 97       	sbiw	r28, 0x0a	; 10
 1dc:	0f b6       	in	r0, 0x3f	; 63
 1de:	f8 94       	cli
 1e0:	de bf       	out	0x3e, r29	; 62
 1e2:	0f be       	out	0x3f, r0	; 63
 1e4:	cd bf       	out	0x3d, r28	; 61
 1e6:	98 87       	std	Y+8, r25	; 0x08
 1e8:	8f 83       	std	Y+7, r24	; 0x07
 1ea:	69 87       	std	Y+9, r22	; 0x09
 1ec:	4a 87       	std	Y+10, r20	; 0x0a
{
	_bit = pgm_read_byte(&(GPIO_PORT::id_to_bit[id]));
 1ee:	89 85       	ldd	r24, Y+9	; 0x09
 1f0:	88 2f       	mov	r24, r24
 1f2:	90 e0       	ldi	r25, 0x00	; 0
 1f4:	86 5d       	subi	r24, 0xD6	; 214
 1f6:	9e 4f       	sbci	r25, 0xFE	; 254
 1f8:	9a 83       	std	Y+2, r25	; 0x02
 1fa:	89 83       	std	Y+1, r24	; 0x01
 1fc:	89 81       	ldd	r24, Y+1	; 0x01
 1fe:	9a 81       	ldd	r25, Y+2	; 0x02
 200:	fc 01       	movw	r30, r24
 202:	84 91       	lpm	r24, Z
 204:	8b 83       	std	Y+3, r24	; 0x03
 206:	8f 81       	ldd	r24, Y+7	; 0x07
 208:	98 85       	ldd	r25, Y+8	; 0x08
 20a:	2b 81       	ldd	r18, Y+3	; 0x03
 20c:	fc 01       	movw	r30, r24
 20e:	20 83       	st	Z, r18
	_port = GPIO_PORT::AllPorts[pgm_read_byte(&(GPIO_PORT::id_to_port[id]))];
 210:	89 85       	ldd	r24, Y+9	; 0x09
 212:	88 2f       	mov	r24, r24
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	8c 51       	subi	r24, 0x1C	; 28
 218:	9f 4f       	sbci	r25, 0xFF	; 255
 21a:	9d 83       	std	Y+5, r25	; 0x05
 21c:	8c 83       	std	Y+4, r24	; 0x04
 21e:	8c 81       	ldd	r24, Y+4	; 0x04
 220:	9d 81       	ldd	r25, Y+5	; 0x05
 222:	fc 01       	movw	r30, r24
 224:	84 91       	lpm	r24, Z
 226:	8e 83       	std	Y+6, r24	; 0x06
 228:	8e 81       	ldd	r24, Y+6	; 0x06
 22a:	88 2f       	mov	r24, r24
 22c:	90 e0       	ldi	r25, 0x00	; 0
 22e:	88 0f       	add	r24, r24
 230:	99 1f       	adc	r25, r25
 232:	80 50       	subi	r24, 0x00	; 0
 234:	9e 4f       	sbci	r25, 0xFE	; 254
 236:	fc 01       	movw	r30, r24
 238:	20 81       	ld	r18, Z
 23a:	31 81       	ldd	r19, Z+1	; 0x01
 23c:	8f 81       	ldd	r24, Y+7	; 0x07
 23e:	98 85       	ldd	r25, Y+8	; 0x08
 240:	fc 01       	movw	r30, r24
 242:	32 83       	std	Z+2, r19	; 0x02
 244:	21 83       	std	Z+1, r18	; 0x01
	_port->dir(_bit, dir);
 246:	21 e0       	ldi	r18, 0x01	; 1
 248:	8a 85       	ldd	r24, Y+10	; 0x0a
 24a:	88 23       	and	r24, r24
 24c:	09 f4       	brne	.+2      	; 0x250 <_ZN4GPIOC1EhNS_15PortDirection_tE+0x7e>
 24e:	20 e0       	ldi	r18, 0x00	; 0
 250:	8f 81       	ldd	r24, Y+7	; 0x07
 252:	98 85       	ldd	r25, Y+8	; 0x08
 254:	fc 01       	movw	r30, r24
 256:	30 81       	ld	r19, Z
 258:	8f 81       	ldd	r24, Y+7	; 0x07
 25a:	98 85       	ldd	r25, Y+8	; 0x08
 25c:	fc 01       	movw	r30, r24
 25e:	81 81       	ldd	r24, Z+1	; 0x01
 260:	92 81       	ldd	r25, Z+2	; 0x02
 262:	42 2f       	mov	r20, r18
 264:	63 2f       	mov	r22, r19
 266:	59 d0       	rcall	.+178    	; 0x31a <_ZN9GPIO_PORT9GPIO_Port3dirEhb>
}
 268:	2a 96       	adiw	r28, 0x0a	; 10
 26a:	0f b6       	in	r0, 0x3f	; 63
 26c:	f8 94       	cli
 26e:	de bf       	out	0x3e, r29	; 62
 270:	0f be       	out	0x3f, r0	; 63
 272:	cd bf       	out	0x3d, r28	; 61
 274:	df 91       	pop	r29
 276:	cf 91       	pop	r28
 278:	08 95       	ret

0000027a <_ZN4GPIOD1Ev>:

GPIO::~GPIO() {}
 27a:	cf 93       	push	r28
 27c:	df 93       	push	r29
 27e:	1f 92       	push	r1
 280:	1f 92       	push	r1
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
 286:	9a 83       	std	Y+2, r25	; 0x02
 288:	89 83       	std	Y+1, r24	; 0x01
 28a:	0f 90       	pop	r0
 28c:	0f 90       	pop	r0
 28e:	df 91       	pop	r29
 290:	cf 91       	pop	r28
 292:	08 95       	ret

00000294 <_ZN4GPIO3setEb>:

bool GPIO::get() {
	return _port->get(_bit);
}

void GPIO::set(bool val) {
 294:	cf 93       	push	r28
 296:	df 93       	push	r29
 298:	00 d0       	rcall	.+0      	; 0x29a <_ZN4GPIO3setEb+0x6>
 29a:	cd b7       	in	r28, 0x3d	; 61
 29c:	de b7       	in	r29, 0x3e	; 62
 29e:	9a 83       	std	Y+2, r25	; 0x02
 2a0:	89 83       	std	Y+1, r24	; 0x01
 2a2:	6b 83       	std	Y+3, r22	; 0x03
	_port->set(_bit, val);
 2a4:	89 81       	ldd	r24, Y+1	; 0x01
 2a6:	9a 81       	ldd	r25, Y+2	; 0x02
 2a8:	fc 01       	movw	r30, r24
 2aa:	20 81       	ld	r18, Z
 2ac:	89 81       	ldd	r24, Y+1	; 0x01
 2ae:	9a 81       	ldd	r25, Y+2	; 0x02
 2b0:	fc 01       	movw	r30, r24
 2b2:	81 81       	ldd	r24, Z+1	; 0x01
 2b4:	92 81       	ldd	r25, Z+2	; 0x02
 2b6:	4b 81       	ldd	r20, Y+3	; 0x03
 2b8:	62 2f       	mov	r22, r18
 2ba:	5c d0       	rcall	.+184    	; 0x374 <_ZN9GPIO_PORT9GPIO_Port3setEhb>
}
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	0f 90       	pop	r0
 2c2:	df 91       	pop	r29
 2c4:	cf 91       	pop	r28
 2c6:	08 95       	ret

000002c8 <_ZN4GPIO5clearEv>:

void GPIO::clear() {
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	1f 92       	push	r1
 2ce:	1f 92       	push	r1
 2d0:	cd b7       	in	r28, 0x3d	; 61
 2d2:	de b7       	in	r29, 0x3e	; 62
 2d4:	9a 83       	std	Y+2, r25	; 0x02
 2d6:	89 83       	std	Y+1, r24	; 0x01
	this->set(0);
 2d8:	89 81       	ldd	r24, Y+1	; 0x01
 2da:	9a 81       	ldd	r25, Y+2	; 0x02
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	da df       	rcall	.-76     	; 0x294 <_ZN4GPIO3setEb>
}
 2e0:	0f 90       	pop	r0
 2e2:	0f 90       	pop	r0
 2e4:	df 91       	pop	r29
 2e6:	cf 91       	pop	r28
 2e8:	08 95       	ret

000002ea <_ZN4GPIO6toggleEv>:

void GPIO::toggle() {
 2ea:	cf 93       	push	r28
 2ec:	df 93       	push	r29
 2ee:	1f 92       	push	r1
 2f0:	1f 92       	push	r1
 2f2:	cd b7       	in	r28, 0x3d	; 61
 2f4:	de b7       	in	r29, 0x3e	; 62
 2f6:	9a 83       	std	Y+2, r25	; 0x02
 2f8:	89 83       	std	Y+1, r24	; 0x01
	_port->toggle(_bit);
 2fa:	89 81       	ldd	r24, Y+1	; 0x01
 2fc:	9a 81       	ldd	r25, Y+2	; 0x02
 2fe:	fc 01       	movw	r30, r24
 300:	20 81       	ld	r18, Z
 302:	89 81       	ldd	r24, Y+1	; 0x01
 304:	9a 81       	ldd	r25, Y+2	; 0x02
 306:	fc 01       	movw	r30, r24
 308:	81 81       	ldd	r24, Z+1	; 0x01
 30a:	92 81       	ldd	r25, Z+2	; 0x02
 30c:	62 2f       	mov	r22, r18
 30e:	5f d0       	rcall	.+190    	; 0x3ce <_ZN9GPIO_PORT9GPIO_Port6toggleEh>
}
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
 314:	df 91       	pop	r29
 316:	cf 91       	pop	r28
 318:	08 95       	ret

0000031a <_ZN9GPIO_PORT9GPIO_Port3dirEhb>:
	_BV( 7 )

};


void GPIO_Port::dir(uint8_t p, bool io) {
 31a:	cf 93       	push	r28
 31c:	df 93       	push	r29
 31e:	00 d0       	rcall	.+0      	; 0x320 <_ZN9GPIO_PORT9GPIO_Port3dirEhb+0x6>
 320:	1f 92       	push	r1
 322:	cd b7       	in	r28, 0x3d	; 61
 324:	de b7       	in	r29, 0x3e	; 62
 326:	9a 83       	std	Y+2, r25	; 0x02
 328:	89 83       	std	Y+1, r24	; 0x01
 32a:	6b 83       	std	Y+3, r22	; 0x03
 32c:	4c 83       	std	Y+4, r20	; 0x04
    if (io)
 32e:	8c 81       	ldd	r24, Y+4	; 0x04
 330:	88 23       	and	r24, r24
 332:	61 f0       	breq	.+24     	; 0x34c <_ZN9GPIO_PORT9GPIO_Port3dirEhb+0x32>
        ddr |= p;
 334:	89 81       	ldd	r24, Y+1	; 0x01
 336:	9a 81       	ldd	r25, Y+2	; 0x02
 338:	fc 01       	movw	r30, r24
 33a:	91 81       	ldd	r25, Z+1	; 0x01
 33c:	8b 81       	ldd	r24, Y+3	; 0x03
 33e:	29 2f       	mov	r18, r25
 340:	28 2b       	or	r18, r24
 342:	89 81       	ldd	r24, Y+1	; 0x01
 344:	9a 81       	ldd	r25, Y+2	; 0x02
 346:	fc 01       	movw	r30, r24
 348:	21 83       	std	Z+1, r18	; 0x01
 34a:	0d c0       	rjmp	.+26     	; 0x366 <_ZN9GPIO_PORT9GPIO_Port3dirEhb+0x4c>
    else
        ddr &= ~p;
 34c:	89 81       	ldd	r24, Y+1	; 0x01
 34e:	9a 81       	ldd	r25, Y+2	; 0x02
 350:	fc 01       	movw	r30, r24
 352:	81 81       	ldd	r24, Z+1	; 0x01
 354:	98 2f       	mov	r25, r24
 356:	8b 81       	ldd	r24, Y+3	; 0x03
 358:	80 95       	com	r24
 35a:	89 23       	and	r24, r25
 35c:	28 2f       	mov	r18, r24
 35e:	89 81       	ldd	r24, Y+1	; 0x01
 360:	9a 81       	ldd	r25, Y+2	; 0x02
 362:	fc 01       	movw	r30, r24
 364:	21 83       	std	Z+1, r18	; 0x01
}
 366:	0f 90       	pop	r0
 368:	0f 90       	pop	r0
 36a:	0f 90       	pop	r0
 36c:	0f 90       	pop	r0
 36e:	df 91       	pop	r29
 370:	cf 91       	pop	r28
 372:	08 95       	ret

00000374 <_ZN9GPIO_PORT9GPIO_Port3setEhb>:
void GPIO_Port::set(uint8_t p, bool val) {
 374:	cf 93       	push	r28
 376:	df 93       	push	r29
 378:	00 d0       	rcall	.+0      	; 0x37a <_ZN9GPIO_PORT9GPIO_Port3setEhb+0x6>
 37a:	1f 92       	push	r1
 37c:	cd b7       	in	r28, 0x3d	; 61
 37e:	de b7       	in	r29, 0x3e	; 62
 380:	9a 83       	std	Y+2, r25	; 0x02
 382:	89 83       	std	Y+1, r24	; 0x01
 384:	6b 83       	std	Y+3, r22	; 0x03
 386:	4c 83       	std	Y+4, r20	; 0x04
    if (val)
 388:	8c 81       	ldd	r24, Y+4	; 0x04
 38a:	88 23       	and	r24, r24
 38c:	61 f0       	breq	.+24     	; 0x3a6 <_ZN9GPIO_PORT9GPIO_Port3setEhb+0x32>
        port |= p;
 38e:	89 81       	ldd	r24, Y+1	; 0x01
 390:	9a 81       	ldd	r25, Y+2	; 0x02
 392:	fc 01       	movw	r30, r24
 394:	92 81       	ldd	r25, Z+2	; 0x02
 396:	8b 81       	ldd	r24, Y+3	; 0x03
 398:	29 2f       	mov	r18, r25
 39a:	28 2b       	or	r18, r24
 39c:	89 81       	ldd	r24, Y+1	; 0x01
 39e:	9a 81       	ldd	r25, Y+2	; 0x02
 3a0:	fc 01       	movw	r30, r24
 3a2:	22 83       	std	Z+2, r18	; 0x02
 3a4:	0d c0       	rjmp	.+26     	; 0x3c0 <_ZN9GPIO_PORT9GPIO_Port3setEhb+0x4c>
    else
        port &= ~p;
 3a6:	89 81       	ldd	r24, Y+1	; 0x01
 3a8:	9a 81       	ldd	r25, Y+2	; 0x02
 3aa:	fc 01       	movw	r30, r24
 3ac:	82 81       	ldd	r24, Z+2	; 0x02
 3ae:	98 2f       	mov	r25, r24
 3b0:	8b 81       	ldd	r24, Y+3	; 0x03
 3b2:	80 95       	com	r24
 3b4:	89 23       	and	r24, r25
 3b6:	28 2f       	mov	r18, r24
 3b8:	89 81       	ldd	r24, Y+1	; 0x01
 3ba:	9a 81       	ldd	r25, Y+2	; 0x02
 3bc:	fc 01       	movw	r30, r24
 3be:	22 83       	std	Z+2, r18	; 0x02
}
 3c0:	0f 90       	pop	r0
 3c2:	0f 90       	pop	r0
 3c4:	0f 90       	pop	r0
 3c6:	0f 90       	pop	r0
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	08 95       	ret

000003ce <_ZN9GPIO_PORT9GPIO_Port6toggleEh>:
}
bool GPIO_Port::get(uint8_t p) {
    return pin & p;
}

void GPIO_Port::toggle(uint8_t p) {
 3ce:	cf 93       	push	r28
 3d0:	df 93       	push	r29
 3d2:	00 d0       	rcall	.+0      	; 0x3d4 <_ZN9GPIO_PORT9GPIO_Port6toggleEh+0x6>
 3d4:	cd b7       	in	r28, 0x3d	; 61
 3d6:	de b7       	in	r29, 0x3e	; 62
 3d8:	9a 83       	std	Y+2, r25	; 0x02
 3da:	89 83       	std	Y+1, r24	; 0x01
 3dc:	6b 83       	std	Y+3, r22	; 0x03
	pin = p;
 3de:	89 81       	ldd	r24, Y+1	; 0x01
 3e0:	9a 81       	ldd	r25, Y+2	; 0x02
 3e2:	2b 81       	ldd	r18, Y+3	; 0x03
 3e4:	fc 01       	movw	r30, r24
 3e6:	20 83       	st	Z, r18
}
 3e8:	0f 90       	pop	r0
 3ea:	0f 90       	pop	r0
 3ec:	0f 90       	pop	r0
 3ee:	df 91       	pop	r29
 3f0:	cf 91       	pop	r28
 3f2:	08 95       	ret

000003f4 <main>:
//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
GPIO led6(6, GPIO::OUTPUT);		//PH0
GPIO led8(8, GPIO::OUTPUT);		//PH0

int main(void){
 3f4:	cf 93       	push	r28
 3f6:	df 93       	push	r29
 3f8:	cd b7       	in	r28, 0x3d	; 61
 3fa:	de b7       	in	r29, 0x3e	; 62
 3fc:	aa 97       	sbiw	r28, 0x2a	; 42
 3fe:	0f b6       	in	r0, 0x3f	; 63
 400:	f8 94       	cli
 402:	de bf       	out	0x3e, r29	; 62
 404:	0f be       	out	0x3f, r0	; 63
 406:	cd bf       	out	0x3d, r28	; 61

	UCSR0B = 0;
 408:	81 ec       	ldi	r24, 0xC1	; 193
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	fc 01       	movw	r30, r24
 40e:	10 82       	st	Z, r1

	led0.set(1);
 410:	61 e0       	ldi	r22, 0x01	; 1
 412:	86 e1       	ldi	r24, 0x16	; 22
 414:	92 e0       	ldi	r25, 0x02	; 2
 416:	3e df       	rcall	.-388    	; 0x294 <_ZN4GPIO3setEb>
	led1.set(1);
 418:	61 e0       	ldi	r22, 0x01	; 1
 41a:	89 e1       	ldi	r24, 0x19	; 25
 41c:	92 e0       	ldi	r25, 0x02	; 2
 41e:	3a df       	rcall	.-396    	; 0x294 <_ZN4GPIO3setEb>
	led6.clear();
 420:	82 e2       	ldi	r24, 0x22	; 34
 422:	92 e0       	ldi	r25, 0x02	; 2
 424:	51 df       	rcall	.-350    	; 0x2c8 <_ZN4GPIO5clearEv>
	led4.clear();
 426:	8f e1       	ldi	r24, 0x1F	; 31
 428:	92 e0       	ldi	r25, 0x02	; 2
 42a:	4e df       	rcall	.-356    	; 0x2c8 <_ZN4GPIO5clearEv>
	led13.clear();
 42c:	8c e1       	ldi	r24, 0x1C	; 28
 42e:	92 e0       	ldi	r25, 0x02	; 2
 430:	4b df       	rcall	.-362    	; 0x2c8 <_ZN4GPIO5clearEv>
 432:	80 e0       	ldi	r24, 0x00	; 0
 434:	90 e0       	ldi	r25, 0x00	; 0
 436:	aa e7       	ldi	r26, 0x7A	; 122
 438:	b4 e4       	ldi	r27, 0x44	; 68
 43a:	89 83       	std	Y+1, r24	; 0x01
 43c:	9a 83       	std	Y+2, r25	; 0x02
 43e:	ab 83       	std	Y+3, r26	; 0x03
 440:	bc 83       	std	Y+4, r27	; 0x04

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 442:	20 e0       	ldi	r18, 0x00	; 0
 444:	30 e0       	ldi	r19, 0x00	; 0
 446:	4a e7       	ldi	r20, 0x7A	; 122
 448:	55 e4       	ldi	r21, 0x45	; 69
 44a:	69 81       	ldd	r22, Y+1	; 0x01
 44c:	7a 81       	ldd	r23, Y+2	; 0x02
 44e:	8b 81       	ldd	r24, Y+3	; 0x03
 450:	9c 81       	ldd	r25, Y+4	; 0x04
 452:	47 d2       	rcall	.+1166   	; 0x8e2 <__mulsf3>
 454:	dc 01       	movw	r26, r24
 456:	cb 01       	movw	r24, r22
 458:	8d 83       	std	Y+5, r24	; 0x05
 45a:	9e 83       	std	Y+6, r25	; 0x06
 45c:	af 83       	std	Y+7, r26	; 0x07
 45e:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
 460:	20 e0       	ldi	r18, 0x00	; 0
 462:	30 e0       	ldi	r19, 0x00	; 0
 464:	40 e8       	ldi	r20, 0x80	; 128
 466:	5f e3       	ldi	r21, 0x3F	; 63
 468:	6d 81       	ldd	r22, Y+5	; 0x05
 46a:	7e 81       	ldd	r23, Y+6	; 0x06
 46c:	8f 81       	ldd	r24, Y+7	; 0x07
 46e:	98 85       	ldd	r25, Y+8	; 0x08
 470:	b7 d1       	rcall	.+878    	; 0x7e0 <__cmpsf2>
 472:	88 23       	and	r24, r24
 474:	2c f4       	brge	.+10     	; 0x480 <__FUSE_REGION_LENGTH__+0x80>
		__ticks = 1;
 476:	81 e0       	ldi	r24, 0x01	; 1
 478:	90 e0       	ldi	r25, 0x00	; 0
 47a:	9a 87       	std	Y+10, r25	; 0x0a
 47c:	89 87       	std	Y+9, r24	; 0x09
 47e:	3b c0       	rjmp	.+118    	; 0x4f6 <__FUSE_REGION_LENGTH__+0xf6>
	else if (__tmp > 65535)
 480:	20 e0       	ldi	r18, 0x00	; 0
 482:	3f ef       	ldi	r19, 0xFF	; 255
 484:	4f e7       	ldi	r20, 0x7F	; 127
 486:	57 e4       	ldi	r21, 0x47	; 71
 488:	6d 81       	ldd	r22, Y+5	; 0x05
 48a:	7e 81       	ldd	r23, Y+6	; 0x06
 48c:	8f 81       	ldd	r24, Y+7	; 0x07
 48e:	98 85       	ldd	r25, Y+8	; 0x08
 490:	24 d2       	rcall	.+1096   	; 0x8da <__gesf2>
 492:	18 16       	cp	r1, r24
 494:	3c f5       	brge	.+78     	; 0x4e4 <__FUSE_REGION_LENGTH__+0xe4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 496:	20 e0       	ldi	r18, 0x00	; 0
 498:	30 e0       	ldi	r19, 0x00	; 0
 49a:	40 e2       	ldi	r20, 0x20	; 32
 49c:	51 e4       	ldi	r21, 0x41	; 65
 49e:	69 81       	ldd	r22, Y+1	; 0x01
 4a0:	7a 81       	ldd	r23, Y+2	; 0x02
 4a2:	8b 81       	ldd	r24, Y+3	; 0x03
 4a4:	9c 81       	ldd	r25, Y+4	; 0x04
 4a6:	1d d2       	rcall	.+1082   	; 0x8e2 <__mulsf3>
 4a8:	dc 01       	movw	r26, r24
 4aa:	cb 01       	movw	r24, r22
 4ac:	bc 01       	movw	r22, r24
 4ae:	cd 01       	movw	r24, r26
 4b0:	9b d1       	rcall	.+822    	; 0x7e8 <__fixunssfsi>
 4b2:	dc 01       	movw	r26, r24
 4b4:	cb 01       	movw	r24, r22
 4b6:	9a 87       	std	Y+10, r25	; 0x0a
 4b8:	89 87       	std	Y+9, r24	; 0x09
 4ba:	0f c0       	rjmp	.+30     	; 0x4da <__FUSE_REGION_LENGTH__+0xda>
 4bc:	80 e9       	ldi	r24, 0x90	; 144
 4be:	91 e0       	ldi	r25, 0x01	; 1
 4c0:	9c 87       	std	Y+12, r25	; 0x0c
 4c2:	8b 87       	std	Y+11, r24	; 0x0b
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 4c4:	8b 85       	ldd	r24, Y+11	; 0x0b
 4c6:	9c 85       	ldd	r25, Y+12	; 0x0c
 4c8:	01 97       	sbiw	r24, 0x01	; 1
 4ca:	f1 f7       	brne	.-4      	; 0x4c8 <__FUSE_REGION_LENGTH__+0xc8>
 4cc:	9c 87       	std	Y+12, r25	; 0x0c
 4ce:	8b 87       	std	Y+11, r24	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 4d0:	89 85       	ldd	r24, Y+9	; 0x09
 4d2:	9a 85       	ldd	r25, Y+10	; 0x0a
 4d4:	01 97       	sbiw	r24, 0x01	; 1
 4d6:	9a 87       	std	Y+10, r25	; 0x0a
 4d8:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 4da:	89 85       	ldd	r24, Y+9	; 0x09
 4dc:	9a 85       	ldd	r25, Y+10	; 0x0a
 4de:	89 2b       	or	r24, r25
 4e0:	69 f7       	brne	.-38     	; 0x4bc <__FUSE_REGION_LENGTH__+0xbc>
 4e2:	13 c0       	rjmp	.+38     	; 0x50a <__FUSE_REGION_LENGTH__+0x10a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 4e4:	6d 81       	ldd	r22, Y+5	; 0x05
 4e6:	7e 81       	ldd	r23, Y+6	; 0x06
 4e8:	8f 81       	ldd	r24, Y+7	; 0x07
 4ea:	98 85       	ldd	r25, Y+8	; 0x08
 4ec:	7d d1       	rcall	.+762    	; 0x7e8 <__fixunssfsi>
 4ee:	dc 01       	movw	r26, r24
 4f0:	cb 01       	movw	r24, r22
 4f2:	9a 87       	std	Y+10, r25	; 0x0a
 4f4:	89 87       	std	Y+9, r24	; 0x09
 4f6:	89 85       	ldd	r24, Y+9	; 0x09
 4f8:	9a 85       	ldd	r25, Y+10	; 0x0a
 4fa:	9e 87       	std	Y+14, r25	; 0x0e
 4fc:	8d 87       	std	Y+13, r24	; 0x0d
 4fe:	8d 85       	ldd	r24, Y+13	; 0x0d
 500:	9e 85       	ldd	r25, Y+14	; 0x0e
 502:	01 97       	sbiw	r24, 0x01	; 1
 504:	f1 f7       	brne	.-4      	; 0x502 <__FUSE_REGION_LENGTH__+0x102>
 506:	9e 87       	std	Y+14, r25	; 0x0e
 508:	8d 87       	std	Y+13, r24	; 0x0d
	_delay_ms(1000);
	led0.clear();
 50a:	86 e1       	ldi	r24, 0x16	; 22
 50c:	92 e0       	ldi	r25, 0x02	; 2
 50e:	dc de       	rcall	.-584    	; 0x2c8 <_ZN4GPIO5clearEv>
	led1.clear();
 510:	89 e1       	ldi	r24, 0x19	; 25
 512:	92 e0       	ldi	r25, 0x02	; 2
 514:	d9 de       	rcall	.-590    	; 0x2c8 <_ZN4GPIO5clearEv>
	led6.set(1);
 516:	61 e0       	ldi	r22, 0x01	; 1
 518:	82 e2       	ldi	r24, 0x22	; 34
 51a:	92 e0       	ldi	r25, 0x02	; 2
 51c:	bb de       	rcall	.-650    	; 0x294 <_ZN4GPIO3setEb>
	led4.set(1);
 51e:	61 e0       	ldi	r22, 0x01	; 1
 520:	8f e1       	ldi	r24, 0x1F	; 31
 522:	92 e0       	ldi	r25, 0x02	; 2
 524:	b7 de       	rcall	.-658    	; 0x294 <_ZN4GPIO3setEb>
	led13.set(1);
 526:	61 e0       	ldi	r22, 0x01	; 1
 528:	8c e1       	ldi	r24, 0x1C	; 28
 52a:	92 e0       	ldi	r25, 0x02	; 2
 52c:	b3 de       	rcall	.-666    	; 0x294 <_ZN4GPIO3setEb>
 52e:	80 e0       	ldi	r24, 0x00	; 0
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	aa e7       	ldi	r26, 0x7A	; 122
 534:	b4 e4       	ldi	r27, 0x44	; 68
 536:	8f 87       	std	Y+15, r24	; 0x0f
 538:	98 8b       	std	Y+16, r25	; 0x10
 53a:	a9 8b       	std	Y+17, r26	; 0x11
 53c:	ba 8b       	std	Y+18, r27	; 0x12

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 53e:	20 e0       	ldi	r18, 0x00	; 0
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	4a e7       	ldi	r20, 0x7A	; 122
 544:	55 e4       	ldi	r21, 0x45	; 69
 546:	6f 85       	ldd	r22, Y+15	; 0x0f
 548:	78 89       	ldd	r23, Y+16	; 0x10
 54a:	89 89       	ldd	r24, Y+17	; 0x11
 54c:	9a 89       	ldd	r25, Y+18	; 0x12
 54e:	c9 d1       	rcall	.+914    	; 0x8e2 <__mulsf3>
 550:	dc 01       	movw	r26, r24
 552:	cb 01       	movw	r24, r22
 554:	8b 8b       	std	Y+19, r24	; 0x13
 556:	9c 8b       	std	Y+20, r25	; 0x14
 558:	ad 8b       	std	Y+21, r26	; 0x15
 55a:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
 55c:	20 e0       	ldi	r18, 0x00	; 0
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	40 e8       	ldi	r20, 0x80	; 128
 562:	5f e3       	ldi	r21, 0x3F	; 63
 564:	6b 89       	ldd	r22, Y+19	; 0x13
 566:	7c 89       	ldd	r23, Y+20	; 0x14
 568:	8d 89       	ldd	r24, Y+21	; 0x15
 56a:	9e 89       	ldd	r25, Y+22	; 0x16
 56c:	39 d1       	rcall	.+626    	; 0x7e0 <__cmpsf2>
 56e:	88 23       	and	r24, r24
 570:	2c f4       	brge	.+10     	; 0x57c <__FUSE_REGION_LENGTH__+0x17c>
		__ticks = 1;
 572:	81 e0       	ldi	r24, 0x01	; 1
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	98 8f       	std	Y+24, r25	; 0x18
 578:	8f 8b       	std	Y+23, r24	; 0x17
 57a:	3b c0       	rjmp	.+118    	; 0x5f2 <__FUSE_REGION_LENGTH__+0x1f2>
	else if (__tmp > 65535)
 57c:	20 e0       	ldi	r18, 0x00	; 0
 57e:	3f ef       	ldi	r19, 0xFF	; 255
 580:	4f e7       	ldi	r20, 0x7F	; 127
 582:	57 e4       	ldi	r21, 0x47	; 71
 584:	6b 89       	ldd	r22, Y+19	; 0x13
 586:	7c 89       	ldd	r23, Y+20	; 0x14
 588:	8d 89       	ldd	r24, Y+21	; 0x15
 58a:	9e 89       	ldd	r25, Y+22	; 0x16
 58c:	a6 d1       	rcall	.+844    	; 0x8da <__gesf2>
 58e:	18 16       	cp	r1, r24
 590:	3c f5       	brge	.+78     	; 0x5e0 <__FUSE_REGION_LENGTH__+0x1e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 592:	20 e0       	ldi	r18, 0x00	; 0
 594:	30 e0       	ldi	r19, 0x00	; 0
 596:	40 e2       	ldi	r20, 0x20	; 32
 598:	51 e4       	ldi	r21, 0x41	; 65
 59a:	6f 85       	ldd	r22, Y+15	; 0x0f
 59c:	78 89       	ldd	r23, Y+16	; 0x10
 59e:	89 89       	ldd	r24, Y+17	; 0x11
 5a0:	9a 89       	ldd	r25, Y+18	; 0x12
 5a2:	9f d1       	rcall	.+830    	; 0x8e2 <__mulsf3>
 5a4:	dc 01       	movw	r26, r24
 5a6:	cb 01       	movw	r24, r22
 5a8:	bc 01       	movw	r22, r24
 5aa:	cd 01       	movw	r24, r26
 5ac:	1d d1       	rcall	.+570    	; 0x7e8 <__fixunssfsi>
 5ae:	dc 01       	movw	r26, r24
 5b0:	cb 01       	movw	r24, r22
 5b2:	98 8f       	std	Y+24, r25	; 0x18
 5b4:	8f 8b       	std	Y+23, r24	; 0x17
 5b6:	0f c0       	rjmp	.+30     	; 0x5d6 <__FUSE_REGION_LENGTH__+0x1d6>
 5b8:	80 e9       	ldi	r24, 0x90	; 144
 5ba:	91 e0       	ldi	r25, 0x01	; 1
 5bc:	9a 8f       	std	Y+26, r25	; 0x1a
 5be:	89 8f       	std	Y+25, r24	; 0x19
 5c0:	89 8d       	ldd	r24, Y+25	; 0x19
 5c2:	9a 8d       	ldd	r25, Y+26	; 0x1a
 5c4:	01 97       	sbiw	r24, 0x01	; 1
 5c6:	f1 f7       	brne	.-4      	; 0x5c4 <__FUSE_REGION_LENGTH__+0x1c4>
 5c8:	9a 8f       	std	Y+26, r25	; 0x1a
 5ca:	89 8f       	std	Y+25, r24	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 5cc:	8f 89       	ldd	r24, Y+23	; 0x17
 5ce:	98 8d       	ldd	r25, Y+24	; 0x18
 5d0:	01 97       	sbiw	r24, 0x01	; 1
 5d2:	98 8f       	std	Y+24, r25	; 0x18
 5d4:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 5d6:	8f 89       	ldd	r24, Y+23	; 0x17
 5d8:	98 8d       	ldd	r25, Y+24	; 0x18
 5da:	89 2b       	or	r24, r25
 5dc:	69 f7       	brne	.-38     	; 0x5b8 <__FUSE_REGION_LENGTH__+0x1b8>
 5de:	13 c0       	rjmp	.+38     	; 0x606 <__FUSE_REGION_LENGTH__+0x206>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 5e0:	6b 89       	ldd	r22, Y+19	; 0x13
 5e2:	7c 89       	ldd	r23, Y+20	; 0x14
 5e4:	8d 89       	ldd	r24, Y+21	; 0x15
 5e6:	9e 89       	ldd	r25, Y+22	; 0x16
 5e8:	ff d0       	rcall	.+510    	; 0x7e8 <__fixunssfsi>
 5ea:	dc 01       	movw	r26, r24
 5ec:	cb 01       	movw	r24, r22
 5ee:	98 8f       	std	Y+24, r25	; 0x18
 5f0:	8f 8b       	std	Y+23, r24	; 0x17
 5f2:	8f 89       	ldd	r24, Y+23	; 0x17
 5f4:	98 8d       	ldd	r25, Y+24	; 0x18
 5f6:	9c 8f       	std	Y+28, r25	; 0x1c
 5f8:	8b 8f       	std	Y+27, r24	; 0x1b
 5fa:	8b 8d       	ldd	r24, Y+27	; 0x1b
 5fc:	9c 8d       	ldd	r25, Y+28	; 0x1c
 5fe:	01 97       	sbiw	r24, 0x01	; 1
 600:	f1 f7       	brne	.-4      	; 0x5fe <__FUSE_REGION_LENGTH__+0x1fe>
 602:	9c 8f       	std	Y+28, r25	; 0x1c
 604:	8b 8f       	std	Y+27, r24	; 0x1b
	_delay_ms(1000);

	while (1){
		led0.toggle();
 606:	86 e1       	ldi	r24, 0x16	; 22
 608:	92 e0       	ldi	r25, 0x02	; 2
 60a:	6f de       	rcall	.-802    	; 0x2ea <_ZN4GPIO6toggleEv>
		led1.toggle();
 60c:	89 e1       	ldi	r24, 0x19	; 25
 60e:	92 e0       	ldi	r25, 0x02	; 2
 610:	6c de       	rcall	.-808    	; 0x2ea <_ZN4GPIO6toggleEv>
		led6.toggle();
 612:	82 e2       	ldi	r24, 0x22	; 34
 614:	92 e0       	ldi	r25, 0x02	; 2
 616:	69 de       	rcall	.-814    	; 0x2ea <_ZN4GPIO6toggleEv>
		led4.toggle();
 618:	8f e1       	ldi	r24, 0x1F	; 31
 61a:	92 e0       	ldi	r25, 0x02	; 2
 61c:	66 de       	rcall	.-820    	; 0x2ea <_ZN4GPIO6toggleEv>
		led13.toggle();
 61e:	8c e1       	ldi	r24, 0x1C	; 28
 620:	92 e0       	ldi	r25, 0x02	; 2
 622:	63 de       	rcall	.-826    	; 0x2ea <_ZN4GPIO6toggleEv>
 624:	80 e0       	ldi	r24, 0x00	; 0
 626:	90 e0       	ldi	r25, 0x00	; 0
 628:	aa e7       	ldi	r26, 0x7A	; 122
 62a:	b4 e4       	ldi	r27, 0x44	; 68
 62c:	8d 8f       	std	Y+29, r24	; 0x1d
 62e:	9e 8f       	std	Y+30, r25	; 0x1e
 630:	af 8f       	std	Y+31, r26	; 0x1f
 632:	b8 a3       	std	Y+32, r27	; 0x20

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 634:	20 e0       	ldi	r18, 0x00	; 0
 636:	30 e0       	ldi	r19, 0x00	; 0
 638:	4a e7       	ldi	r20, 0x7A	; 122
 63a:	55 e4       	ldi	r21, 0x45	; 69
 63c:	6d 8d       	ldd	r22, Y+29	; 0x1d
 63e:	7e 8d       	ldd	r23, Y+30	; 0x1e
 640:	8f 8d       	ldd	r24, Y+31	; 0x1f
 642:	98 a1       	ldd	r25, Y+32	; 0x20
 644:	4e d1       	rcall	.+668    	; 0x8e2 <__mulsf3>
 646:	dc 01       	movw	r26, r24
 648:	cb 01       	movw	r24, r22
 64a:	89 a3       	std	Y+33, r24	; 0x21
 64c:	9a a3       	std	Y+34, r25	; 0x22
 64e:	ab a3       	std	Y+35, r26	; 0x23
 650:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
 652:	20 e0       	ldi	r18, 0x00	; 0
 654:	30 e0       	ldi	r19, 0x00	; 0
 656:	40 e8       	ldi	r20, 0x80	; 128
 658:	5f e3       	ldi	r21, 0x3F	; 63
 65a:	69 a1       	ldd	r22, Y+33	; 0x21
 65c:	7a a1       	ldd	r23, Y+34	; 0x22
 65e:	8b a1       	ldd	r24, Y+35	; 0x23
 660:	9c a1       	ldd	r25, Y+36	; 0x24
 662:	be d0       	rcall	.+380    	; 0x7e0 <__cmpsf2>
 664:	88 23       	and	r24, r24
 666:	2c f4       	brge	.+10     	; 0x672 <__FUSE_REGION_LENGTH__+0x272>
		__ticks = 1;
 668:	81 e0       	ldi	r24, 0x01	; 1
 66a:	90 e0       	ldi	r25, 0x00	; 0
 66c:	9e a3       	std	Y+38, r25	; 0x26
 66e:	8d a3       	std	Y+37, r24	; 0x25
 670:	3b c0       	rjmp	.+118    	; 0x6e8 <__FUSE_REGION_LENGTH__+0x2e8>
	else if (__tmp > 65535)
 672:	20 e0       	ldi	r18, 0x00	; 0
 674:	3f ef       	ldi	r19, 0xFF	; 255
 676:	4f e7       	ldi	r20, 0x7F	; 127
 678:	57 e4       	ldi	r21, 0x47	; 71
 67a:	69 a1       	ldd	r22, Y+33	; 0x21
 67c:	7a a1       	ldd	r23, Y+34	; 0x22
 67e:	8b a1       	ldd	r24, Y+35	; 0x23
 680:	9c a1       	ldd	r25, Y+36	; 0x24
 682:	2b d1       	rcall	.+598    	; 0x8da <__gesf2>
 684:	18 16       	cp	r1, r24
 686:	3c f5       	brge	.+78     	; 0x6d6 <__FUSE_REGION_LENGTH__+0x2d6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 688:	20 e0       	ldi	r18, 0x00	; 0
 68a:	30 e0       	ldi	r19, 0x00	; 0
 68c:	40 e2       	ldi	r20, 0x20	; 32
 68e:	51 e4       	ldi	r21, 0x41	; 65
 690:	6d 8d       	ldd	r22, Y+29	; 0x1d
 692:	7e 8d       	ldd	r23, Y+30	; 0x1e
 694:	8f 8d       	ldd	r24, Y+31	; 0x1f
 696:	98 a1       	ldd	r25, Y+32	; 0x20
 698:	24 d1       	rcall	.+584    	; 0x8e2 <__mulsf3>
 69a:	dc 01       	movw	r26, r24
 69c:	cb 01       	movw	r24, r22
 69e:	bc 01       	movw	r22, r24
 6a0:	cd 01       	movw	r24, r26
 6a2:	a2 d0       	rcall	.+324    	; 0x7e8 <__fixunssfsi>
 6a4:	dc 01       	movw	r26, r24
 6a6:	cb 01       	movw	r24, r22
 6a8:	9e a3       	std	Y+38, r25	; 0x26
 6aa:	8d a3       	std	Y+37, r24	; 0x25
 6ac:	0f c0       	rjmp	.+30     	; 0x6cc <__FUSE_REGION_LENGTH__+0x2cc>
 6ae:	80 e9       	ldi	r24, 0x90	; 144
 6b0:	91 e0       	ldi	r25, 0x01	; 1
 6b2:	98 a7       	std	Y+40, r25	; 0x28
 6b4:	8f a3       	std	Y+39, r24	; 0x27
 6b6:	8f a1       	ldd	r24, Y+39	; 0x27
 6b8:	98 a5       	ldd	r25, Y+40	; 0x28
 6ba:	01 97       	sbiw	r24, 0x01	; 1
 6bc:	f1 f7       	brne	.-4      	; 0x6ba <__FUSE_REGION_LENGTH__+0x2ba>
 6be:	98 a7       	std	Y+40, r25	; 0x28
 6c0:	8f a3       	std	Y+39, r24	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 6c2:	8d a1       	ldd	r24, Y+37	; 0x25
 6c4:	9e a1       	ldd	r25, Y+38	; 0x26
 6c6:	01 97       	sbiw	r24, 0x01	; 1
 6c8:	9e a3       	std	Y+38, r25	; 0x26
 6ca:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 6cc:	8d a1       	ldd	r24, Y+37	; 0x25
 6ce:	9e a1       	ldd	r25, Y+38	; 0x26
 6d0:	89 2b       	or	r24, r25
 6d2:	69 f7       	brne	.-38     	; 0x6ae <__FUSE_REGION_LENGTH__+0x2ae>
 6d4:	13 c0       	rjmp	.+38     	; 0x6fc <__FUSE_REGION_LENGTH__+0x2fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 6d6:	69 a1       	ldd	r22, Y+33	; 0x21
 6d8:	7a a1       	ldd	r23, Y+34	; 0x22
 6da:	8b a1       	ldd	r24, Y+35	; 0x23
 6dc:	9c a1       	ldd	r25, Y+36	; 0x24
 6de:	84 d0       	rcall	.+264    	; 0x7e8 <__fixunssfsi>
 6e0:	dc 01       	movw	r26, r24
 6e2:	cb 01       	movw	r24, r22
 6e4:	9e a3       	std	Y+38, r25	; 0x26
 6e6:	8d a3       	std	Y+37, r24	; 0x25
 6e8:	8d a1       	ldd	r24, Y+37	; 0x25
 6ea:	9e a1       	ldd	r25, Y+38	; 0x26
 6ec:	9a a7       	std	Y+42, r25	; 0x2a
 6ee:	89 a7       	std	Y+41, r24	; 0x29
 6f0:	89 a5       	ldd	r24, Y+41	; 0x29
 6f2:	9a a5       	ldd	r25, Y+42	; 0x2a
 6f4:	01 97       	sbiw	r24, 0x01	; 1
 6f6:	f1 f7       	brne	.-4      	; 0x6f4 <__FUSE_REGION_LENGTH__+0x2f4>
 6f8:	9a a7       	std	Y+42, r25	; 0x2a
 6fa:	89 a7       	std	Y+41, r24	; 0x29
//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
GPIO led6(6, GPIO::OUTPUT);		//PH0
GPIO led8(8, GPIO::OUTPUT);		//PH0

int main(void){
 6fc:	84 cf       	rjmp	.-248    	; 0x606 <__FUSE_REGION_LENGTH__+0x206>

000006fe <_Z41__static_initialization_and_destruction_0ii>:
		led4.toggle();
		led13.toggle();
		_delay_ms(1000);
	}

}
 6fe:	cf 93       	push	r28
 700:	df 93       	push	r29
 702:	00 d0       	rcall	.+0      	; 0x704 <_Z41__static_initialization_and_destruction_0ii+0x6>
 704:	1f 92       	push	r1
 706:	cd b7       	in	r28, 0x3d	; 61
 708:	de b7       	in	r29, 0x3e	; 62
 70a:	9a 83       	std	Y+2, r25	; 0x02
 70c:	89 83       	std	Y+1, r24	; 0x01
 70e:	7c 83       	std	Y+4, r23	; 0x04
 710:	6b 83       	std	Y+3, r22	; 0x03
 712:	89 81       	ldd	r24, Y+1	; 0x01
 714:	9a 81       	ldd	r25, Y+2	; 0x02
 716:	01 97       	sbiw	r24, 0x01	; 1
 718:	11 f5       	brne	.+68     	; 0x75e <_Z41__static_initialization_and_destruction_0ii+0x60>
 71a:	8b 81       	ldd	r24, Y+3	; 0x03
 71c:	9c 81       	ldd	r25, Y+4	; 0x04
 71e:	01 96       	adiw	r24, 0x01	; 1
 720:	f1 f4       	brne	.+60     	; 0x75e <_Z41__static_initialization_and_destruction_0ii+0x60>
#include <util/delay.h>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
 722:	41 e0       	ldi	r20, 0x01	; 1
 724:	60 e0       	ldi	r22, 0x00	; 0
 726:	86 e1       	ldi	r24, 0x16	; 22
 728:	92 e0       	ldi	r25, 0x02	; 2
 72a:	53 dd       	rcall	.-1370   	; 0x1d2 <_ZN4GPIOC1EhNS_15PortDirection_tE>
GPIO led1(1, GPIO::OUTPUT);		//PE1
 72c:	41 e0       	ldi	r20, 0x01	; 1
 72e:	61 e0       	ldi	r22, 0x01	; 1
 730:	89 e1       	ldi	r24, 0x19	; 25
 732:	92 e0       	ldi	r25, 0x02	; 2
 734:	4e dd       	rcall	.-1380   	; 0x1d2 <_ZN4GPIOC1EhNS_15PortDirection_tE>

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7
 736:	41 e0       	ldi	r20, 0x01	; 1
 738:	6d e0       	ldi	r22, 0x0D	; 13
 73a:	8c e1       	ldi	r24, 0x1C	; 28
 73c:	92 e0       	ldi	r25, 0x02	; 2
 73e:	49 dd       	rcall	.-1390   	; 0x1d2 <_ZN4GPIOC1EhNS_15PortDirection_tE>

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
 740:	41 e0       	ldi	r20, 0x01	; 1
 742:	64 e0       	ldi	r22, 0x04	; 4
 744:	8f e1       	ldi	r24, 0x1F	; 31
 746:	92 e0       	ldi	r25, 0x02	; 2
 748:	44 dd       	rcall	.-1400   	; 0x1d2 <_ZN4GPIOC1EhNS_15PortDirection_tE>
GPIO led6(6, GPIO::OUTPUT);		//PH0
 74a:	41 e0       	ldi	r20, 0x01	; 1
 74c:	66 e0       	ldi	r22, 0x06	; 6
 74e:	82 e2       	ldi	r24, 0x22	; 34
 750:	92 e0       	ldi	r25, 0x02	; 2
 752:	3f dd       	rcall	.-1410   	; 0x1d2 <_ZN4GPIOC1EhNS_15PortDirection_tE>
GPIO led8(8, GPIO::OUTPUT);		//PH0
 754:	41 e0       	ldi	r20, 0x01	; 1
 756:	68 e0       	ldi	r22, 0x08	; 8
 758:	85 e2       	ldi	r24, 0x25	; 37
 75a:	92 e0       	ldi	r25, 0x02	; 2
 75c:	3a dd       	rcall	.-1420   	; 0x1d2 <_ZN4GPIOC1EhNS_15PortDirection_tE>
 75e:	89 81       	ldd	r24, Y+1	; 0x01
 760:	9a 81       	ldd	r25, Y+2	; 0x02
 762:	89 2b       	or	r24, r25
 764:	b1 f4       	brne	.+44     	; 0x792 <_Z41__static_initialization_and_destruction_0ii+0x94>
 766:	8b 81       	ldd	r24, Y+3	; 0x03
 768:	9c 81       	ldd	r25, Y+4	; 0x04
 76a:	01 96       	adiw	r24, 0x01	; 1
 76c:	91 f4       	brne	.+36     	; 0x792 <_Z41__static_initialization_and_destruction_0ii+0x94>
 76e:	85 e2       	ldi	r24, 0x25	; 37
 770:	92 e0       	ldi	r25, 0x02	; 2
 772:	83 dd       	rcall	.-1274   	; 0x27a <_ZN4GPIOD1Ev>
//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
GPIO led6(6, GPIO::OUTPUT);		//PH0
 774:	82 e2       	ldi	r24, 0x22	; 34
 776:	92 e0       	ldi	r25, 0x02	; 2
 778:	80 dd       	rcall	.-1280   	; 0x27a <_ZN4GPIOD1Ev>

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7

//Adicionar LED
GPIO led4(4, GPIO::OUTPUT);		//PG5
 77a:	8f e1       	ldi	r24, 0x1F	; 31
 77c:	92 e0       	ldi	r25, 0x02	; 2
 77e:	7d dd       	rcall	.-1286   	; 0x27a <_ZN4GPIOD1Ev>
//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
GPIO led1(1, GPIO::OUTPUT);		//PE1

//LEDS PLACA (acende com '1')
GPIO led13(13, GPIO::OUTPUT);	//PB7
 780:	8c e1       	ldi	r24, 0x1C	; 28
 782:	92 e0       	ldi	r25, 0x02	; 2
 784:	7a dd       	rcall	.-1292   	; 0x27a <_ZN4GPIOD1Ev>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
GPIO led1(1, GPIO::OUTPUT);		//PE1
 786:	89 e1       	ldi	r24, 0x19	; 25
 788:	92 e0       	ldi	r25, 0x02	; 2
 78a:	77 dd       	rcall	.-1298   	; 0x27a <_ZN4GPIOD1Ev>
#include <util/delay.h>
#include "GPIO.h"


//LEDS PLACA (acende com '0')
GPIO led0(0, GPIO::OUTPUT);		//PE0
 78c:	86 e1       	ldi	r24, 0x16	; 22
 78e:	92 e0       	ldi	r25, 0x02	; 2
 790:	74 dd       	rcall	.-1304   	; 0x27a <_ZN4GPIOD1Ev>
		led4.toggle();
		led13.toggle();
		_delay_ms(1000);
	}

}
 792:	0f 90       	pop	r0
 794:	0f 90       	pop	r0
 796:	0f 90       	pop	r0
 798:	0f 90       	pop	r0
 79a:	df 91       	pop	r29
 79c:	cf 91       	pop	r28
 79e:	08 95       	ret

000007a0 <_GLOBAL__sub_I_led0>:
 7a0:	cf 93       	push	r28
 7a2:	df 93       	push	r29
 7a4:	cd b7       	in	r28, 0x3d	; 61
 7a6:	de b7       	in	r29, 0x3e	; 62
 7a8:	6f ef       	ldi	r22, 0xFF	; 255
 7aa:	7f ef       	ldi	r23, 0xFF	; 255
 7ac:	81 e0       	ldi	r24, 0x01	; 1
 7ae:	90 e0       	ldi	r25, 0x00	; 0
 7b0:	a6 df       	rcall	.-180    	; 0x6fe <_Z41__static_initialization_and_destruction_0ii>
 7b2:	df 91       	pop	r29
 7b4:	cf 91       	pop	r28
 7b6:	08 95       	ret

000007b8 <_GLOBAL__sub_D_led0>:
 7b8:	cf 93       	push	r28
 7ba:	df 93       	push	r29
 7bc:	cd b7       	in	r28, 0x3d	; 61
 7be:	de b7       	in	r29, 0x3e	; 62
 7c0:	6f ef       	ldi	r22, 0xFF	; 255
 7c2:	7f ef       	ldi	r23, 0xFF	; 255
 7c4:	80 e0       	ldi	r24, 0x00	; 0
 7c6:	90 e0       	ldi	r25, 0x00	; 0
 7c8:	9a df       	rcall	.-204    	; 0x6fe <_Z41__static_initialization_and_destruction_0ii>
 7ca:	df 91       	pop	r29
 7cc:	cf 91       	pop	r28
 7ce:	08 95       	ret

000007d0 <__tablejump2__>:
 7d0:	ee 0f       	add	r30, r30
 7d2:	ff 1f       	adc	r31, r31
 7d4:	88 1f       	adc	r24, r24
 7d6:	8b bf       	out	0x3b, r24	; 59
 7d8:	07 90       	elpm	r0, Z+
 7da:	f6 91       	elpm	r31, Z
 7dc:	e0 2d       	mov	r30, r0
 7de:	19 94       	eijmp

000007e0 <__cmpsf2>:
 7e0:	2f d0       	rcall	.+94     	; 0x840 <__fp_cmp>
 7e2:	08 f4       	brcc	.+2      	; 0x7e6 <__cmpsf2+0x6>
 7e4:	81 e0       	ldi	r24, 0x01	; 1
 7e6:	08 95       	ret

000007e8 <__fixunssfsi>:
 7e8:	57 d0       	rcall	.+174    	; 0x898 <__fp_splitA>
 7ea:	88 f0       	brcs	.+34     	; 0x80e <__fixunssfsi+0x26>
 7ec:	9f 57       	subi	r25, 0x7F	; 127
 7ee:	90 f0       	brcs	.+36     	; 0x814 <__fixunssfsi+0x2c>
 7f0:	b9 2f       	mov	r27, r25
 7f2:	99 27       	eor	r25, r25
 7f4:	b7 51       	subi	r27, 0x17	; 23
 7f6:	a0 f0       	brcs	.+40     	; 0x820 <__fixunssfsi+0x38>
 7f8:	d1 f0       	breq	.+52     	; 0x82e <__fixunssfsi+0x46>
 7fa:	66 0f       	add	r22, r22
 7fc:	77 1f       	adc	r23, r23
 7fe:	88 1f       	adc	r24, r24
 800:	99 1f       	adc	r25, r25
 802:	1a f0       	brmi	.+6      	; 0x80a <__fixunssfsi+0x22>
 804:	ba 95       	dec	r27
 806:	c9 f7       	brne	.-14     	; 0x7fa <__fixunssfsi+0x12>
 808:	12 c0       	rjmp	.+36     	; 0x82e <__fixunssfsi+0x46>
 80a:	b1 30       	cpi	r27, 0x01	; 1
 80c:	81 f0       	breq	.+32     	; 0x82e <__fixunssfsi+0x46>
 80e:	5e d0       	rcall	.+188    	; 0x8cc <__fp_zero>
 810:	b1 e0       	ldi	r27, 0x01	; 1
 812:	08 95       	ret
 814:	5b c0       	rjmp	.+182    	; 0x8cc <__fp_zero>
 816:	67 2f       	mov	r22, r23
 818:	78 2f       	mov	r23, r24
 81a:	88 27       	eor	r24, r24
 81c:	b8 5f       	subi	r27, 0xF8	; 248
 81e:	39 f0       	breq	.+14     	; 0x82e <__fixunssfsi+0x46>
 820:	b9 3f       	cpi	r27, 0xF9	; 249
 822:	cc f3       	brlt	.-14     	; 0x816 <__fixunssfsi+0x2e>
 824:	86 95       	lsr	r24
 826:	77 95       	ror	r23
 828:	67 95       	ror	r22
 82a:	b3 95       	inc	r27
 82c:	d9 f7       	brne	.-10     	; 0x824 <__fixunssfsi+0x3c>
 82e:	3e f4       	brtc	.+14     	; 0x83e <__fixunssfsi+0x56>
 830:	90 95       	com	r25
 832:	80 95       	com	r24
 834:	70 95       	com	r23
 836:	61 95       	neg	r22
 838:	7f 4f       	sbci	r23, 0xFF	; 255
 83a:	8f 4f       	sbci	r24, 0xFF	; 255
 83c:	9f 4f       	sbci	r25, 0xFF	; 255
 83e:	08 95       	ret

00000840 <__fp_cmp>:
 840:	99 0f       	add	r25, r25
 842:	00 08       	sbc	r0, r0
 844:	55 0f       	add	r21, r21
 846:	aa 0b       	sbc	r26, r26
 848:	e0 e8       	ldi	r30, 0x80	; 128
 84a:	fe ef       	ldi	r31, 0xFE	; 254
 84c:	16 16       	cp	r1, r22
 84e:	17 06       	cpc	r1, r23
 850:	e8 07       	cpc	r30, r24
 852:	f9 07       	cpc	r31, r25
 854:	c0 f0       	brcs	.+48     	; 0x886 <__fp_cmp+0x46>
 856:	12 16       	cp	r1, r18
 858:	13 06       	cpc	r1, r19
 85a:	e4 07       	cpc	r30, r20
 85c:	f5 07       	cpc	r31, r21
 85e:	98 f0       	brcs	.+38     	; 0x886 <__fp_cmp+0x46>
 860:	62 1b       	sub	r22, r18
 862:	73 0b       	sbc	r23, r19
 864:	84 0b       	sbc	r24, r20
 866:	95 0b       	sbc	r25, r21
 868:	39 f4       	brne	.+14     	; 0x878 <__fp_cmp+0x38>
 86a:	0a 26       	eor	r0, r26
 86c:	61 f0       	breq	.+24     	; 0x886 <__fp_cmp+0x46>
 86e:	23 2b       	or	r18, r19
 870:	24 2b       	or	r18, r20
 872:	25 2b       	or	r18, r21
 874:	21 f4       	brne	.+8      	; 0x87e <__fp_cmp+0x3e>
 876:	08 95       	ret
 878:	0a 26       	eor	r0, r26
 87a:	09 f4       	brne	.+2      	; 0x87e <__fp_cmp+0x3e>
 87c:	a1 40       	sbci	r26, 0x01	; 1
 87e:	a6 95       	lsr	r26
 880:	8f ef       	ldi	r24, 0xFF	; 255
 882:	81 1d       	adc	r24, r1
 884:	81 1d       	adc	r24, r1
 886:	08 95       	ret

00000888 <__fp_split3>:
 888:	57 fd       	sbrc	r21, 7
 88a:	90 58       	subi	r25, 0x80	; 128
 88c:	44 0f       	add	r20, r20
 88e:	55 1f       	adc	r21, r21
 890:	59 f0       	breq	.+22     	; 0x8a8 <__fp_splitA+0x10>
 892:	5f 3f       	cpi	r21, 0xFF	; 255
 894:	71 f0       	breq	.+28     	; 0x8b2 <__fp_splitA+0x1a>
 896:	47 95       	ror	r20

00000898 <__fp_splitA>:
 898:	88 0f       	add	r24, r24
 89a:	97 fb       	bst	r25, 7
 89c:	99 1f       	adc	r25, r25
 89e:	61 f0       	breq	.+24     	; 0x8b8 <__fp_splitA+0x20>
 8a0:	9f 3f       	cpi	r25, 0xFF	; 255
 8a2:	79 f0       	breq	.+30     	; 0x8c2 <__fp_splitA+0x2a>
 8a4:	87 95       	ror	r24
 8a6:	08 95       	ret
 8a8:	12 16       	cp	r1, r18
 8aa:	13 06       	cpc	r1, r19
 8ac:	14 06       	cpc	r1, r20
 8ae:	55 1f       	adc	r21, r21
 8b0:	f2 cf       	rjmp	.-28     	; 0x896 <__fp_split3+0xe>
 8b2:	46 95       	lsr	r20
 8b4:	f1 df       	rcall	.-30     	; 0x898 <__fp_splitA>
 8b6:	08 c0       	rjmp	.+16     	; 0x8c8 <__fp_splitA+0x30>
 8b8:	16 16       	cp	r1, r22
 8ba:	17 06       	cpc	r1, r23
 8bc:	18 06       	cpc	r1, r24
 8be:	99 1f       	adc	r25, r25
 8c0:	f1 cf       	rjmp	.-30     	; 0x8a4 <__fp_splitA+0xc>
 8c2:	86 95       	lsr	r24
 8c4:	71 05       	cpc	r23, r1
 8c6:	61 05       	cpc	r22, r1
 8c8:	08 94       	sec
 8ca:	08 95       	ret

000008cc <__fp_zero>:
 8cc:	e8 94       	clt

000008ce <__fp_szero>:
 8ce:	bb 27       	eor	r27, r27
 8d0:	66 27       	eor	r22, r22
 8d2:	77 27       	eor	r23, r23
 8d4:	cb 01       	movw	r24, r22
 8d6:	97 f9       	bld	r25, 7
 8d8:	08 95       	ret

000008da <__gesf2>:
 8da:	b2 df       	rcall	.-156    	; 0x840 <__fp_cmp>
 8dc:	08 f4       	brcc	.+2      	; 0x8e0 <__gesf2+0x6>
 8de:	8f ef       	ldi	r24, 0xFF	; 255
 8e0:	08 95       	ret

000008e2 <__mulsf3>:
 8e2:	0b d0       	rcall	.+22     	; 0x8fa <__mulsf3x>
 8e4:	78 c0       	rjmp	.+240    	; 0x9d6 <__fp_round>
 8e6:	69 d0       	rcall	.+210    	; 0x9ba <__fp_pscA>
 8e8:	28 f0       	brcs	.+10     	; 0x8f4 <__mulsf3+0x12>
 8ea:	6e d0       	rcall	.+220    	; 0x9c8 <__fp_pscB>
 8ec:	18 f0       	brcs	.+6      	; 0x8f4 <__mulsf3+0x12>
 8ee:	95 23       	and	r25, r21
 8f0:	09 f0       	breq	.+2      	; 0x8f4 <__mulsf3+0x12>
 8f2:	5a c0       	rjmp	.+180    	; 0x9a8 <__fp_inf>
 8f4:	5f c0       	rjmp	.+190    	; 0x9b4 <__fp_nan>
 8f6:	11 24       	eor	r1, r1
 8f8:	ea cf       	rjmp	.-44     	; 0x8ce <__fp_szero>

000008fa <__mulsf3x>:
 8fa:	c6 df       	rcall	.-116    	; 0x888 <__fp_split3>
 8fc:	a0 f3       	brcs	.-24     	; 0x8e6 <__mulsf3+0x4>

000008fe <__mulsf3_pse>:
 8fe:	95 9f       	mul	r25, r21
 900:	d1 f3       	breq	.-12     	; 0x8f6 <__mulsf3+0x14>
 902:	95 0f       	add	r25, r21
 904:	50 e0       	ldi	r21, 0x00	; 0
 906:	55 1f       	adc	r21, r21
 908:	62 9f       	mul	r22, r18
 90a:	f0 01       	movw	r30, r0
 90c:	72 9f       	mul	r23, r18
 90e:	bb 27       	eor	r27, r27
 910:	f0 0d       	add	r31, r0
 912:	b1 1d       	adc	r27, r1
 914:	63 9f       	mul	r22, r19
 916:	aa 27       	eor	r26, r26
 918:	f0 0d       	add	r31, r0
 91a:	b1 1d       	adc	r27, r1
 91c:	aa 1f       	adc	r26, r26
 91e:	64 9f       	mul	r22, r20
 920:	66 27       	eor	r22, r22
 922:	b0 0d       	add	r27, r0
 924:	a1 1d       	adc	r26, r1
 926:	66 1f       	adc	r22, r22
 928:	82 9f       	mul	r24, r18
 92a:	22 27       	eor	r18, r18
 92c:	b0 0d       	add	r27, r0
 92e:	a1 1d       	adc	r26, r1
 930:	62 1f       	adc	r22, r18
 932:	73 9f       	mul	r23, r19
 934:	b0 0d       	add	r27, r0
 936:	a1 1d       	adc	r26, r1
 938:	62 1f       	adc	r22, r18
 93a:	83 9f       	mul	r24, r19
 93c:	a0 0d       	add	r26, r0
 93e:	61 1d       	adc	r22, r1
 940:	22 1f       	adc	r18, r18
 942:	74 9f       	mul	r23, r20
 944:	33 27       	eor	r19, r19
 946:	a0 0d       	add	r26, r0
 948:	61 1d       	adc	r22, r1
 94a:	23 1f       	adc	r18, r19
 94c:	84 9f       	mul	r24, r20
 94e:	60 0d       	add	r22, r0
 950:	21 1d       	adc	r18, r1
 952:	82 2f       	mov	r24, r18
 954:	76 2f       	mov	r23, r22
 956:	6a 2f       	mov	r22, r26
 958:	11 24       	eor	r1, r1
 95a:	9f 57       	subi	r25, 0x7F	; 127
 95c:	50 40       	sbci	r21, 0x00	; 0
 95e:	8a f0       	brmi	.+34     	; 0x982 <__mulsf3_pse+0x84>
 960:	e1 f0       	breq	.+56     	; 0x99a <__mulsf3_pse+0x9c>
 962:	88 23       	and	r24, r24
 964:	4a f0       	brmi	.+18     	; 0x978 <__mulsf3_pse+0x7a>
 966:	ee 0f       	add	r30, r30
 968:	ff 1f       	adc	r31, r31
 96a:	bb 1f       	adc	r27, r27
 96c:	66 1f       	adc	r22, r22
 96e:	77 1f       	adc	r23, r23
 970:	88 1f       	adc	r24, r24
 972:	91 50       	subi	r25, 0x01	; 1
 974:	50 40       	sbci	r21, 0x00	; 0
 976:	a9 f7       	brne	.-22     	; 0x962 <__mulsf3_pse+0x64>
 978:	9e 3f       	cpi	r25, 0xFE	; 254
 97a:	51 05       	cpc	r21, r1
 97c:	70 f0       	brcs	.+28     	; 0x99a <__mulsf3_pse+0x9c>
 97e:	14 c0       	rjmp	.+40     	; 0x9a8 <__fp_inf>
 980:	a6 cf       	rjmp	.-180    	; 0x8ce <__fp_szero>
 982:	5f 3f       	cpi	r21, 0xFF	; 255
 984:	ec f3       	brlt	.-6      	; 0x980 <__mulsf3_pse+0x82>
 986:	98 3e       	cpi	r25, 0xE8	; 232
 988:	dc f3       	brlt	.-10     	; 0x980 <__mulsf3_pse+0x82>
 98a:	86 95       	lsr	r24
 98c:	77 95       	ror	r23
 98e:	67 95       	ror	r22
 990:	b7 95       	ror	r27
 992:	f7 95       	ror	r31
 994:	e7 95       	ror	r30
 996:	9f 5f       	subi	r25, 0xFF	; 255
 998:	c1 f7       	brne	.-16     	; 0x98a <__mulsf3_pse+0x8c>
 99a:	fe 2b       	or	r31, r30
 99c:	88 0f       	add	r24, r24
 99e:	91 1d       	adc	r25, r1
 9a0:	96 95       	lsr	r25
 9a2:	87 95       	ror	r24
 9a4:	97 f9       	bld	r25, 7
 9a6:	08 95       	ret

000009a8 <__fp_inf>:
 9a8:	97 f9       	bld	r25, 7
 9aa:	9f 67       	ori	r25, 0x7F	; 127
 9ac:	80 e8       	ldi	r24, 0x80	; 128
 9ae:	70 e0       	ldi	r23, 0x00	; 0
 9b0:	60 e0       	ldi	r22, 0x00	; 0
 9b2:	08 95       	ret

000009b4 <__fp_nan>:
 9b4:	9f ef       	ldi	r25, 0xFF	; 255
 9b6:	80 ec       	ldi	r24, 0xC0	; 192
 9b8:	08 95       	ret

000009ba <__fp_pscA>:
 9ba:	00 24       	eor	r0, r0
 9bc:	0a 94       	dec	r0
 9be:	16 16       	cp	r1, r22
 9c0:	17 06       	cpc	r1, r23
 9c2:	18 06       	cpc	r1, r24
 9c4:	09 06       	cpc	r0, r25
 9c6:	08 95       	ret

000009c8 <__fp_pscB>:
 9c8:	00 24       	eor	r0, r0
 9ca:	0a 94       	dec	r0
 9cc:	12 16       	cp	r1, r18
 9ce:	13 06       	cpc	r1, r19
 9d0:	14 06       	cpc	r1, r20
 9d2:	05 06       	cpc	r0, r21
 9d4:	08 95       	ret

000009d6 <__fp_round>:
 9d6:	09 2e       	mov	r0, r25
 9d8:	03 94       	inc	r0
 9da:	00 0c       	add	r0, r0
 9dc:	11 f4       	brne	.+4      	; 0x9e2 <__fp_round+0xc>
 9de:	88 23       	and	r24, r24
 9e0:	52 f0       	brmi	.+20     	; 0x9f6 <__fp_round+0x20>
 9e2:	bb 0f       	add	r27, r27
 9e4:	40 f4       	brcc	.+16     	; 0x9f6 <__fp_round+0x20>
 9e6:	bf 2b       	or	r27, r31
 9e8:	11 f4       	brne	.+4      	; 0x9ee <__fp_round+0x18>
 9ea:	60 ff       	sbrs	r22, 0
 9ec:	04 c0       	rjmp	.+8      	; 0x9f6 <__fp_round+0x20>
 9ee:	6f 5f       	subi	r22, 0xFF	; 255
 9f0:	7f 4f       	sbci	r23, 0xFF	; 255
 9f2:	8f 4f       	sbci	r24, 0xFF	; 255
 9f4:	9f 4f       	sbci	r25, 0xFF	; 255
 9f6:	08 95       	ret

000009f8 <__do_global_dtors>:
 9f8:	10 e0       	ldi	r17, 0x00	; 0
 9fa:	c9 eb       	ldi	r28, 0xB9	; 185
 9fc:	d0 e0       	ldi	r29, 0x00	; 0
 9fe:	00 e0       	ldi	r16, 0x00	; 0
 a00:	05 c0       	rjmp	.+10     	; 0xa0c <__do_global_dtors+0x14>
 a02:	80 2f       	mov	r24, r16
 a04:	fe 01       	movw	r30, r28
 a06:	e4 de       	rcall	.-568    	; 0x7d0 <__tablejump2__>
 a08:	21 96       	adiw	r28, 0x01	; 1
 a0a:	01 1d       	adc	r16, r1
 a0c:	ca 3b       	cpi	r28, 0xBA	; 186
 a0e:	d1 07       	cpc	r29, r17
 a10:	80 e0       	ldi	r24, 0x00	; 0
 a12:	08 07       	cpc	r16, r24
 a14:	b1 f7       	brne	.-20     	; 0xa02 <__do_global_dtors+0xa>
 a16:	f8 94       	cli

00000a18 <__stop_program>:
 a18:	ff cf       	rjmp	.-2      	; 0xa18 <__stop_program>
