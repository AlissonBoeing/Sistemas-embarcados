
UART.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000058c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000538  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .stab         00000bac  00000000  00000000  0000058c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000eb2  00000000  00000000  00001138  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .comment      00000011  00000000  00000000  00001fea  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001ffc  2**2
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	60 d0       	rcall	.+192    	; 0x1b6 <main>
  f6:	1e c2       	rjmp	.+1084   	; 0x534 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <_ZN4UARTC1EmNS_10DATABITS_tENS_8PARITY_tENS_10STOPBITS_tE>:
 */
#include "UART.h"

#define FOSC 16000000

UART::UART(uint32_t baud, UART::DATABITS_t db, UART::PARITY_t parity, UART::STOPBITS_t sb) {
  fa:	ef 92       	push	r14
  fc:	0f 93       	push	r16
  fe:	cf 93       	push	r28
 100:	df 93       	push	r29
 102:	cd b7       	in	r28, 0x3d	; 61
 104:	de b7       	in	r29, 0x3e	; 62
 106:	2f 97       	sbiw	r28, 0x0f	; 15
 108:	0f b6       	in	r0, 0x3f	; 63
 10a:	f8 94       	cli
 10c:	de bf       	out	0x3e, r29	; 62
 10e:	0f be       	out	0x3f, r0	; 63
 110:	cd bf       	out	0x3d, r28	; 61
 112:	9c 83       	std	Y+4, r25	; 0x04
 114:	8b 83       	std	Y+3, r24	; 0x03
 116:	4d 83       	std	Y+5, r20	; 0x05
 118:	5e 83       	std	Y+6, r21	; 0x06
 11a:	6f 83       	std	Y+7, r22	; 0x07
 11c:	78 87       	std	Y+8, r23	; 0x08
 11e:	29 87       	std	Y+9, r18	; 0x09
 120:	0a 87       	std	Y+10, r16	; 0x0a
 122:	eb 86       	std	Y+11, r14	; 0x0b

	unsigned int ubrr = (FOSC/16/baud-1);
 124:	80 e4       	ldi	r24, 0x40	; 64
 126:	92 e4       	ldi	r25, 0x42	; 66
 128:	af e0       	ldi	r26, 0x0F	; 15
 12a:	b0 e0       	ldi	r27, 0x00	; 0
 12c:	2d 81       	ldd	r18, Y+5	; 0x05
 12e:	3e 81       	ldd	r19, Y+6	; 0x06
 130:	4f 81       	ldd	r20, Y+7	; 0x07
 132:	58 85       	ldd	r21, Y+8	; 0x08
 134:	bc 01       	movw	r22, r24
 136:	cd 01       	movw	r24, r26
 138:	cf d0       	rcall	.+414    	; 0x2d8 <__udivmodsi4>
 13a:	da 01       	movw	r26, r20
 13c:	c9 01       	movw	r24, r18
 13e:	01 97       	sbiw	r24, 0x01	; 1
 140:	9a 83       	std	Y+2, r25	; 0x02
 142:	89 83       	std	Y+1, r24	; 0x01

	UBRR0H = (unsigned char)(ubrr>>8);
 144:	85 ec       	ldi	r24, 0xC5	; 197
 146:	90 e0       	ldi	r25, 0x00	; 0
 148:	29 81       	ldd	r18, Y+1	; 0x01
 14a:	3a 81       	ldd	r19, Y+2	; 0x02
 14c:	23 2f       	mov	r18, r19
 14e:	33 27       	eor	r19, r19
 150:	fc 01       	movw	r30, r24
 152:	20 83       	st	Z, r18
	UBRR0L = (unsigned char)ubrr;
 154:	84 ec       	ldi	r24, 0xC4	; 196
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	29 81       	ldd	r18, Y+1	; 0x01
 15a:	fc 01       	movw	r30, r24
 15c:	20 83       	st	Z, r18

	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 15e:	81 ec       	ldi	r24, 0xC1	; 193
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	28 e1       	ldi	r18, 0x18	; 24
 164:	fc 01       	movw	r30, r24
 166:	20 83       	st	Z, r18

	UCSR0C = db | parity | sb;
 168:	82 ec       	ldi	r24, 0xC2	; 194
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	39 85       	ldd	r19, Y+9	; 0x09
 16e:	2a 85       	ldd	r18, Y+10	; 0x0a
 170:	32 2b       	or	r19, r18
 172:	2b 85       	ldd	r18, Y+11	; 0x0b
 174:	23 2b       	or	r18, r19
 176:	fc 01       	movw	r30, r24
 178:	20 83       	st	Z, r18

}
 17a:	2f 96       	adiw	r28, 0x0f	; 15
 17c:	0f b6       	in	r0, 0x3f	; 63
 17e:	f8 94       	cli
 180:	de bf       	out	0x3e, r29	; 62
 182:	0f be       	out	0x3f, r0	; 63
 184:	cd bf       	out	0x3d, r28	; 61
 186:	df 91       	pop	r29
 188:	cf 91       	pop	r28
 18a:	0f 91       	pop	r16
 18c:	ef 90       	pop	r14
 18e:	08 95       	ret

00000190 <_ZN4UART3putEh>:
UART::~UART() {}
void UART::put(uint8_t data) {
 190:	cf 93       	push	r28
 192:	df 93       	push	r29
 194:	00 d0       	rcall	.+0      	; 0x196 <_ZN4UART3putEh+0x6>
 196:	cd b7       	in	r28, 0x3d	; 61
 198:	de b7       	in	r29, 0x3e	; 62
 19a:	9a 83       	std	Y+2, r25	; 0x02
 19c:	89 83       	std	Y+1, r24	; 0x01
 19e:	6b 83       	std	Y+3, r22	; 0x03

	//while (!( UCSR0A & (1<<UDRE0))) ;

	UDR0 = data;
 1a0:	86 ec       	ldi	r24, 0xC6	; 198
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	2b 81       	ldd	r18, Y+3	; 0x03
 1a6:	fc 01       	movw	r30, r24
 1a8:	20 83       	st	Z, r18

}
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	df 91       	pop	r29
 1b2:	cf 91       	pop	r28
 1b4:	08 95       	ret

000001b6 <main>:
 *      Author: aluno
 */
#include "UART.h";
#include <util/delay.h>

int main() {
 1b6:	ef 92       	push	r14
 1b8:	0f 93       	push	r16
 1ba:	cf 93       	push	r28
 1bc:	df 93       	push	r29
 1be:	cd b7       	in	r28, 0x3d	; 61
 1c0:	de b7       	in	r29, 0x3e	; 62
 1c2:	61 97       	sbiw	r28, 0x11	; 17
 1c4:	0f b6       	in	r0, 0x3f	; 63
 1c6:	f8 94       	cli
 1c8:	de bf       	out	0x3e, r29	; 62
 1ca:	0f be       	out	0x3f, r0	; 63
 1cc:	cd bf       	out	0x3d, r28	; 61

	UART uart(9600, UART::DATABITS_8, UART::NONE, UART::STOPBIT_2);
 1ce:	ce 01       	movw	r24, r28
 1d0:	41 96       	adiw	r24, 0x11	; 17
 1d2:	68 94       	set
 1d4:	ee 24       	eor	r14, r14
 1d6:	e3 f8       	bld	r14, 3
 1d8:	00 e0       	ldi	r16, 0x00	; 0
 1da:	26 e0       	ldi	r18, 0x06	; 6
 1dc:	40 e8       	ldi	r20, 0x80	; 128
 1de:	55 e2       	ldi	r21, 0x25	; 37
 1e0:	60 e0       	ldi	r22, 0x00	; 0
 1e2:	70 e0       	ldi	r23, 0x00	; 0
 1e4:	8a df       	rcall	.-236    	; 0xfa <_ZN4UARTC1EmNS_10DATABITS_tENS_8PARITY_tENS_10STOPBITS_tE>


	int i = 0;
 1e6:	1a 82       	std	Y+2, r1	; 0x02
 1e8:	19 82       	std	Y+1, r1	; 0x01

	while(true) {
		uart.put(i);
 1ea:	29 81       	ldd	r18, Y+1	; 0x01
 1ec:	ce 01       	movw	r24, r28
 1ee:	41 96       	adiw	r24, 0x11	; 17
 1f0:	62 2f       	mov	r22, r18
 1f2:	ce df       	rcall	.-100    	; 0x190 <_ZN4UART3putEh>
 1f4:	80 e0       	ldi	r24, 0x00	; 0
 1f6:	90 e0       	ldi	r25, 0x00	; 0
 1f8:	aa ef       	ldi	r26, 0xFA	; 250
 1fa:	b3 e4       	ldi	r27, 0x43	; 67
 1fc:	8b 83       	std	Y+3, r24	; 0x03
 1fe:	9c 83       	std	Y+4, r25	; 0x04
 200:	ad 83       	std	Y+5, r26	; 0x05
 202:	be 83       	std	Y+6, r27	; 0x06

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 204:	20 e0       	ldi	r18, 0x00	; 0
 206:	30 e0       	ldi	r19, 0x00	; 0
 208:	4a e7       	ldi	r20, 0x7A	; 122
 20a:	55 e4       	ldi	r21, 0x45	; 69
 20c:	6b 81       	ldd	r22, Y+3	; 0x03
 20e:	7c 81       	ldd	r23, Y+4	; 0x04
 210:	8d 81       	ldd	r24, Y+5	; 0x05
 212:	9e 81       	ldd	r25, Y+6	; 0x06
 214:	04 d1       	rcall	.+520    	; 0x41e <__mulsf3>
 216:	dc 01       	movw	r26, r24
 218:	cb 01       	movw	r24, r22
 21a:	8f 83       	std	Y+7, r24	; 0x07
 21c:	98 87       	std	Y+8, r25	; 0x08
 21e:	a9 87       	std	Y+9, r26	; 0x09
 220:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
 222:	20 e0       	ldi	r18, 0x00	; 0
 224:	30 e0       	ldi	r19, 0x00	; 0
 226:	40 e8       	ldi	r20, 0x80	; 128
 228:	5f e3       	ldi	r21, 0x3F	; 63
 22a:	6f 81       	ldd	r22, Y+7	; 0x07
 22c:	78 85       	ldd	r23, Y+8	; 0x08
 22e:	89 85       	ldd	r24, Y+9	; 0x09
 230:	9a 85       	ldd	r25, Y+10	; 0x0a
 232:	74 d0       	rcall	.+232    	; 0x31c <__cmpsf2>
 234:	88 23       	and	r24, r24
 236:	2c f4       	brge	.+10     	; 0x242 <main+0x8c>
		__ticks = 1;
 238:	81 e0       	ldi	r24, 0x01	; 1
 23a:	90 e0       	ldi	r25, 0x00	; 0
 23c:	9c 87       	std	Y+12, r25	; 0x0c
 23e:	8b 87       	std	Y+11, r24	; 0x0b
 240:	3b c0       	rjmp	.+118    	; 0x2b8 <main+0x102>
	else if (__tmp > 65535)
 242:	20 e0       	ldi	r18, 0x00	; 0
 244:	3f ef       	ldi	r19, 0xFF	; 255
 246:	4f e7       	ldi	r20, 0x7F	; 127
 248:	57 e4       	ldi	r21, 0x47	; 71
 24a:	6f 81       	ldd	r22, Y+7	; 0x07
 24c:	78 85       	ldd	r23, Y+8	; 0x08
 24e:	89 85       	ldd	r24, Y+9	; 0x09
 250:	9a 85       	ldd	r25, Y+10	; 0x0a
 252:	e1 d0       	rcall	.+450    	; 0x416 <__gesf2>
 254:	18 16       	cp	r1, r24
 256:	3c f5       	brge	.+78     	; 0x2a6 <main+0xf0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 258:	20 e0       	ldi	r18, 0x00	; 0
 25a:	30 e0       	ldi	r19, 0x00	; 0
 25c:	40 e2       	ldi	r20, 0x20	; 32
 25e:	51 e4       	ldi	r21, 0x41	; 65
 260:	6b 81       	ldd	r22, Y+3	; 0x03
 262:	7c 81       	ldd	r23, Y+4	; 0x04
 264:	8d 81       	ldd	r24, Y+5	; 0x05
 266:	9e 81       	ldd	r25, Y+6	; 0x06
 268:	da d0       	rcall	.+436    	; 0x41e <__mulsf3>
 26a:	dc 01       	movw	r26, r24
 26c:	cb 01       	movw	r24, r22
 26e:	bc 01       	movw	r22, r24
 270:	cd 01       	movw	r24, r26
 272:	58 d0       	rcall	.+176    	; 0x324 <__fixunssfsi>
 274:	dc 01       	movw	r26, r24
 276:	cb 01       	movw	r24, r22
 278:	9c 87       	std	Y+12, r25	; 0x0c
 27a:	8b 87       	std	Y+11, r24	; 0x0b
 27c:	0f c0       	rjmp	.+30     	; 0x29c <main+0xe6>
 27e:	80 e9       	ldi	r24, 0x90	; 144
 280:	91 e0       	ldi	r25, 0x01	; 1
 282:	9e 87       	std	Y+14, r25	; 0x0e
 284:	8d 87       	std	Y+13, r24	; 0x0d
	__asm__ volatile (
		"1: sbiw %0,1" "\n\t"
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
 286:	8d 85       	ldd	r24, Y+13	; 0x0d
 288:	9e 85       	ldd	r25, Y+14	; 0x0e
 28a:	01 97       	sbiw	r24, 0x01	; 1
 28c:	f1 f7       	brne	.-4      	; 0x28a <main+0xd4>
 28e:	9e 87       	std	Y+14, r25	; 0x0e
 290:	8d 87       	std	Y+13, r24	; 0x0d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 292:	8b 85       	ldd	r24, Y+11	; 0x0b
 294:	9c 85       	ldd	r25, Y+12	; 0x0c
 296:	01 97       	sbiw	r24, 0x01	; 1
 298:	9c 87       	std	Y+12, r25	; 0x0c
 29a:	8b 87       	std	Y+11, r24	; 0x0b
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 29c:	8b 85       	ldd	r24, Y+11	; 0x0b
 29e:	9c 85       	ldd	r25, Y+12	; 0x0c
 2a0:	89 2b       	or	r24, r25
 2a2:	69 f7       	brne	.-38     	; 0x27e <main+0xc8>
 2a4:	13 c0       	rjmp	.+38     	; 0x2cc <main+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
 2a6:	6f 81       	ldd	r22, Y+7	; 0x07
 2a8:	78 85       	ldd	r23, Y+8	; 0x08
 2aa:	89 85       	ldd	r24, Y+9	; 0x09
 2ac:	9a 85       	ldd	r25, Y+10	; 0x0a
 2ae:	3a d0       	rcall	.+116    	; 0x324 <__fixunssfsi>
 2b0:	dc 01       	movw	r26, r24
 2b2:	cb 01       	movw	r24, r22
 2b4:	9c 87       	std	Y+12, r25	; 0x0c
 2b6:	8b 87       	std	Y+11, r24	; 0x0b
 2b8:	8b 85       	ldd	r24, Y+11	; 0x0b
 2ba:	9c 85       	ldd	r25, Y+12	; 0x0c
 2bc:	98 8b       	std	Y+16, r25	; 0x10
 2be:	8f 87       	std	Y+15, r24	; 0x0f
 2c0:	8f 85       	ldd	r24, Y+15	; 0x0f
 2c2:	98 89       	ldd	r25, Y+16	; 0x10
 2c4:	01 97       	sbiw	r24, 0x01	; 1
 2c6:	f1 f7       	brne	.-4      	; 0x2c4 <main+0x10e>
 2c8:	98 8b       	std	Y+16, r25	; 0x10
 2ca:	8f 87       	std	Y+15, r24	; 0x0f

		_delay_ms(500);

		i++;
 2cc:	89 81       	ldd	r24, Y+1	; 0x01
 2ce:	9a 81       	ldd	r25, Y+2	; 0x02
 2d0:	01 96       	adiw	r24, 0x01	; 1
 2d2:	9a 83       	std	Y+2, r25	; 0x02
 2d4:	89 83       	std	Y+1, r24	; 0x01
 2d6:	89 cf       	rjmp	.-238    	; 0x1ea <main+0x34>

000002d8 <__udivmodsi4>:
 2d8:	a1 e2       	ldi	r26, 0x21	; 33
 2da:	1a 2e       	mov	r1, r26
 2dc:	aa 1b       	sub	r26, r26
 2de:	bb 1b       	sub	r27, r27
 2e0:	fd 01       	movw	r30, r26
 2e2:	0d c0       	rjmp	.+26     	; 0x2fe <__udivmodsi4_ep>

000002e4 <__udivmodsi4_loop>:
 2e4:	aa 1f       	adc	r26, r26
 2e6:	bb 1f       	adc	r27, r27
 2e8:	ee 1f       	adc	r30, r30
 2ea:	ff 1f       	adc	r31, r31
 2ec:	a2 17       	cp	r26, r18
 2ee:	b3 07       	cpc	r27, r19
 2f0:	e4 07       	cpc	r30, r20
 2f2:	f5 07       	cpc	r31, r21
 2f4:	20 f0       	brcs	.+8      	; 0x2fe <__udivmodsi4_ep>
 2f6:	a2 1b       	sub	r26, r18
 2f8:	b3 0b       	sbc	r27, r19
 2fa:	e4 0b       	sbc	r30, r20
 2fc:	f5 0b       	sbc	r31, r21

000002fe <__udivmodsi4_ep>:
 2fe:	66 1f       	adc	r22, r22
 300:	77 1f       	adc	r23, r23
 302:	88 1f       	adc	r24, r24
 304:	99 1f       	adc	r25, r25
 306:	1a 94       	dec	r1
 308:	69 f7       	brne	.-38     	; 0x2e4 <__udivmodsi4_loop>
 30a:	60 95       	com	r22
 30c:	70 95       	com	r23
 30e:	80 95       	com	r24
 310:	90 95       	com	r25
 312:	9b 01       	movw	r18, r22
 314:	ac 01       	movw	r20, r24
 316:	bd 01       	movw	r22, r26
 318:	cf 01       	movw	r24, r30
 31a:	08 95       	ret

0000031c <__cmpsf2>:
 31c:	2f d0       	rcall	.+94     	; 0x37c <__fp_cmp>
 31e:	08 f4       	brcc	.+2      	; 0x322 <__cmpsf2+0x6>
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	08 95       	ret

00000324 <__fixunssfsi>:
 324:	57 d0       	rcall	.+174    	; 0x3d4 <__fp_splitA>
 326:	88 f0       	brcs	.+34     	; 0x34a <__fixunssfsi+0x26>
 328:	9f 57       	subi	r25, 0x7F	; 127
 32a:	90 f0       	brcs	.+36     	; 0x350 <__fixunssfsi+0x2c>
 32c:	b9 2f       	mov	r27, r25
 32e:	99 27       	eor	r25, r25
 330:	b7 51       	subi	r27, 0x17	; 23
 332:	a0 f0       	brcs	.+40     	; 0x35c <__fixunssfsi+0x38>
 334:	d1 f0       	breq	.+52     	; 0x36a <__fixunssfsi+0x46>
 336:	66 0f       	add	r22, r22
 338:	77 1f       	adc	r23, r23
 33a:	88 1f       	adc	r24, r24
 33c:	99 1f       	adc	r25, r25
 33e:	1a f0       	brmi	.+6      	; 0x346 <__fixunssfsi+0x22>
 340:	ba 95       	dec	r27
 342:	c9 f7       	brne	.-14     	; 0x336 <__fixunssfsi+0x12>
 344:	12 c0       	rjmp	.+36     	; 0x36a <__fixunssfsi+0x46>
 346:	b1 30       	cpi	r27, 0x01	; 1
 348:	81 f0       	breq	.+32     	; 0x36a <__fixunssfsi+0x46>
 34a:	5e d0       	rcall	.+188    	; 0x408 <__fp_zero>
 34c:	b1 e0       	ldi	r27, 0x01	; 1
 34e:	08 95       	ret
 350:	5b c0       	rjmp	.+182    	; 0x408 <__fp_zero>
 352:	67 2f       	mov	r22, r23
 354:	78 2f       	mov	r23, r24
 356:	88 27       	eor	r24, r24
 358:	b8 5f       	subi	r27, 0xF8	; 248
 35a:	39 f0       	breq	.+14     	; 0x36a <__fixunssfsi+0x46>
 35c:	b9 3f       	cpi	r27, 0xF9	; 249
 35e:	cc f3       	brlt	.-14     	; 0x352 <__fixunssfsi+0x2e>
 360:	86 95       	lsr	r24
 362:	77 95       	ror	r23
 364:	67 95       	ror	r22
 366:	b3 95       	inc	r27
 368:	d9 f7       	brne	.-10     	; 0x360 <__fixunssfsi+0x3c>
 36a:	3e f4       	brtc	.+14     	; 0x37a <__fixunssfsi+0x56>
 36c:	90 95       	com	r25
 36e:	80 95       	com	r24
 370:	70 95       	com	r23
 372:	61 95       	neg	r22
 374:	7f 4f       	sbci	r23, 0xFF	; 255
 376:	8f 4f       	sbci	r24, 0xFF	; 255
 378:	9f 4f       	sbci	r25, 0xFF	; 255
 37a:	08 95       	ret

0000037c <__fp_cmp>:
 37c:	99 0f       	add	r25, r25
 37e:	00 08       	sbc	r0, r0
 380:	55 0f       	add	r21, r21
 382:	aa 0b       	sbc	r26, r26
 384:	e0 e8       	ldi	r30, 0x80	; 128
 386:	fe ef       	ldi	r31, 0xFE	; 254
 388:	16 16       	cp	r1, r22
 38a:	17 06       	cpc	r1, r23
 38c:	e8 07       	cpc	r30, r24
 38e:	f9 07       	cpc	r31, r25
 390:	c0 f0       	brcs	.+48     	; 0x3c2 <__fp_cmp+0x46>
 392:	12 16       	cp	r1, r18
 394:	13 06       	cpc	r1, r19
 396:	e4 07       	cpc	r30, r20
 398:	f5 07       	cpc	r31, r21
 39a:	98 f0       	brcs	.+38     	; 0x3c2 <__fp_cmp+0x46>
 39c:	62 1b       	sub	r22, r18
 39e:	73 0b       	sbc	r23, r19
 3a0:	84 0b       	sbc	r24, r20
 3a2:	95 0b       	sbc	r25, r21
 3a4:	39 f4       	brne	.+14     	; 0x3b4 <__fp_cmp+0x38>
 3a6:	0a 26       	eor	r0, r26
 3a8:	61 f0       	breq	.+24     	; 0x3c2 <__fp_cmp+0x46>
 3aa:	23 2b       	or	r18, r19
 3ac:	24 2b       	or	r18, r20
 3ae:	25 2b       	or	r18, r21
 3b0:	21 f4       	brne	.+8      	; 0x3ba <__fp_cmp+0x3e>
 3b2:	08 95       	ret
 3b4:	0a 26       	eor	r0, r26
 3b6:	09 f4       	brne	.+2      	; 0x3ba <__fp_cmp+0x3e>
 3b8:	a1 40       	sbci	r26, 0x01	; 1
 3ba:	a6 95       	lsr	r26
 3bc:	8f ef       	ldi	r24, 0xFF	; 255
 3be:	81 1d       	adc	r24, r1
 3c0:	81 1d       	adc	r24, r1
 3c2:	08 95       	ret

000003c4 <__fp_split3>:
 3c4:	57 fd       	sbrc	r21, 7
 3c6:	90 58       	subi	r25, 0x80	; 128
 3c8:	44 0f       	add	r20, r20
 3ca:	55 1f       	adc	r21, r21
 3cc:	59 f0       	breq	.+22     	; 0x3e4 <__fp_splitA+0x10>
 3ce:	5f 3f       	cpi	r21, 0xFF	; 255
 3d0:	71 f0       	breq	.+28     	; 0x3ee <__fp_splitA+0x1a>
 3d2:	47 95       	ror	r20

000003d4 <__fp_splitA>:
 3d4:	88 0f       	add	r24, r24
 3d6:	97 fb       	bst	r25, 7
 3d8:	99 1f       	adc	r25, r25
 3da:	61 f0       	breq	.+24     	; 0x3f4 <__fp_splitA+0x20>
 3dc:	9f 3f       	cpi	r25, 0xFF	; 255
 3de:	79 f0       	breq	.+30     	; 0x3fe <__fp_splitA+0x2a>
 3e0:	87 95       	ror	r24
 3e2:	08 95       	ret
 3e4:	12 16       	cp	r1, r18
 3e6:	13 06       	cpc	r1, r19
 3e8:	14 06       	cpc	r1, r20
 3ea:	55 1f       	adc	r21, r21
 3ec:	f2 cf       	rjmp	.-28     	; 0x3d2 <__fp_split3+0xe>
 3ee:	46 95       	lsr	r20
 3f0:	f1 df       	rcall	.-30     	; 0x3d4 <__fp_splitA>
 3f2:	08 c0       	rjmp	.+16     	; 0x404 <__FUSE_REGION_LENGTH__+0x4>
 3f4:	16 16       	cp	r1, r22
 3f6:	17 06       	cpc	r1, r23
 3f8:	18 06       	cpc	r1, r24
 3fa:	99 1f       	adc	r25, r25
 3fc:	f1 cf       	rjmp	.-30     	; 0x3e0 <__fp_splitA+0xc>
 3fe:	86 95       	lsr	r24
 400:	71 05       	cpc	r23, r1
 402:	61 05       	cpc	r22, r1
 404:	08 94       	sec
 406:	08 95       	ret

00000408 <__fp_zero>:
 408:	e8 94       	clt

0000040a <__fp_szero>:
 40a:	bb 27       	eor	r27, r27
 40c:	66 27       	eor	r22, r22
 40e:	77 27       	eor	r23, r23
 410:	cb 01       	movw	r24, r22
 412:	97 f9       	bld	r25, 7
 414:	08 95       	ret

00000416 <__gesf2>:
 416:	b2 df       	rcall	.-156    	; 0x37c <__fp_cmp>
 418:	08 f4       	brcc	.+2      	; 0x41c <__gesf2+0x6>
 41a:	8f ef       	ldi	r24, 0xFF	; 255
 41c:	08 95       	ret

0000041e <__mulsf3>:
 41e:	0b d0       	rcall	.+22     	; 0x436 <__mulsf3x>
 420:	78 c0       	rjmp	.+240    	; 0x512 <__fp_round>
 422:	69 d0       	rcall	.+210    	; 0x4f6 <__fp_pscA>
 424:	28 f0       	brcs	.+10     	; 0x430 <__mulsf3+0x12>
 426:	6e d0       	rcall	.+220    	; 0x504 <__fp_pscB>
 428:	18 f0       	brcs	.+6      	; 0x430 <__mulsf3+0x12>
 42a:	95 23       	and	r25, r21
 42c:	09 f0       	breq	.+2      	; 0x430 <__mulsf3+0x12>
 42e:	5a c0       	rjmp	.+180    	; 0x4e4 <__fp_inf>
 430:	5f c0       	rjmp	.+190    	; 0x4f0 <__fp_nan>
 432:	11 24       	eor	r1, r1
 434:	ea cf       	rjmp	.-44     	; 0x40a <__fp_szero>

00000436 <__mulsf3x>:
 436:	c6 df       	rcall	.-116    	; 0x3c4 <__fp_split3>
 438:	a0 f3       	brcs	.-24     	; 0x422 <__mulsf3+0x4>

0000043a <__mulsf3_pse>:
 43a:	95 9f       	mul	r25, r21
 43c:	d1 f3       	breq	.-12     	; 0x432 <__mulsf3+0x14>
 43e:	95 0f       	add	r25, r21
 440:	50 e0       	ldi	r21, 0x00	; 0
 442:	55 1f       	adc	r21, r21
 444:	62 9f       	mul	r22, r18
 446:	f0 01       	movw	r30, r0
 448:	72 9f       	mul	r23, r18
 44a:	bb 27       	eor	r27, r27
 44c:	f0 0d       	add	r31, r0
 44e:	b1 1d       	adc	r27, r1
 450:	63 9f       	mul	r22, r19
 452:	aa 27       	eor	r26, r26
 454:	f0 0d       	add	r31, r0
 456:	b1 1d       	adc	r27, r1
 458:	aa 1f       	adc	r26, r26
 45a:	64 9f       	mul	r22, r20
 45c:	66 27       	eor	r22, r22
 45e:	b0 0d       	add	r27, r0
 460:	a1 1d       	adc	r26, r1
 462:	66 1f       	adc	r22, r22
 464:	82 9f       	mul	r24, r18
 466:	22 27       	eor	r18, r18
 468:	b0 0d       	add	r27, r0
 46a:	a1 1d       	adc	r26, r1
 46c:	62 1f       	adc	r22, r18
 46e:	73 9f       	mul	r23, r19
 470:	b0 0d       	add	r27, r0
 472:	a1 1d       	adc	r26, r1
 474:	62 1f       	adc	r22, r18
 476:	83 9f       	mul	r24, r19
 478:	a0 0d       	add	r26, r0
 47a:	61 1d       	adc	r22, r1
 47c:	22 1f       	adc	r18, r18
 47e:	74 9f       	mul	r23, r20
 480:	33 27       	eor	r19, r19
 482:	a0 0d       	add	r26, r0
 484:	61 1d       	adc	r22, r1
 486:	23 1f       	adc	r18, r19
 488:	84 9f       	mul	r24, r20
 48a:	60 0d       	add	r22, r0
 48c:	21 1d       	adc	r18, r1
 48e:	82 2f       	mov	r24, r18
 490:	76 2f       	mov	r23, r22
 492:	6a 2f       	mov	r22, r26
 494:	11 24       	eor	r1, r1
 496:	9f 57       	subi	r25, 0x7F	; 127
 498:	50 40       	sbci	r21, 0x00	; 0
 49a:	8a f0       	brmi	.+34     	; 0x4be <__mulsf3_pse+0x84>
 49c:	e1 f0       	breq	.+56     	; 0x4d6 <__mulsf3_pse+0x9c>
 49e:	88 23       	and	r24, r24
 4a0:	4a f0       	brmi	.+18     	; 0x4b4 <__mulsf3_pse+0x7a>
 4a2:	ee 0f       	add	r30, r30
 4a4:	ff 1f       	adc	r31, r31
 4a6:	bb 1f       	adc	r27, r27
 4a8:	66 1f       	adc	r22, r22
 4aa:	77 1f       	adc	r23, r23
 4ac:	88 1f       	adc	r24, r24
 4ae:	91 50       	subi	r25, 0x01	; 1
 4b0:	50 40       	sbci	r21, 0x00	; 0
 4b2:	a9 f7       	brne	.-22     	; 0x49e <__mulsf3_pse+0x64>
 4b4:	9e 3f       	cpi	r25, 0xFE	; 254
 4b6:	51 05       	cpc	r21, r1
 4b8:	70 f0       	brcs	.+28     	; 0x4d6 <__mulsf3_pse+0x9c>
 4ba:	14 c0       	rjmp	.+40     	; 0x4e4 <__fp_inf>
 4bc:	a6 cf       	rjmp	.-180    	; 0x40a <__fp_szero>
 4be:	5f 3f       	cpi	r21, 0xFF	; 255
 4c0:	ec f3       	brlt	.-6      	; 0x4bc <__mulsf3_pse+0x82>
 4c2:	98 3e       	cpi	r25, 0xE8	; 232
 4c4:	dc f3       	brlt	.-10     	; 0x4bc <__mulsf3_pse+0x82>
 4c6:	86 95       	lsr	r24
 4c8:	77 95       	ror	r23
 4ca:	67 95       	ror	r22
 4cc:	b7 95       	ror	r27
 4ce:	f7 95       	ror	r31
 4d0:	e7 95       	ror	r30
 4d2:	9f 5f       	subi	r25, 0xFF	; 255
 4d4:	c1 f7       	brne	.-16     	; 0x4c6 <__mulsf3_pse+0x8c>
 4d6:	fe 2b       	or	r31, r30
 4d8:	88 0f       	add	r24, r24
 4da:	91 1d       	adc	r25, r1
 4dc:	96 95       	lsr	r25
 4de:	87 95       	ror	r24
 4e0:	97 f9       	bld	r25, 7
 4e2:	08 95       	ret

000004e4 <__fp_inf>:
 4e4:	97 f9       	bld	r25, 7
 4e6:	9f 67       	ori	r25, 0x7F	; 127
 4e8:	80 e8       	ldi	r24, 0x80	; 128
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	60 e0       	ldi	r22, 0x00	; 0
 4ee:	08 95       	ret

000004f0 <__fp_nan>:
 4f0:	9f ef       	ldi	r25, 0xFF	; 255
 4f2:	80 ec       	ldi	r24, 0xC0	; 192
 4f4:	08 95       	ret

000004f6 <__fp_pscA>:
 4f6:	00 24       	eor	r0, r0
 4f8:	0a 94       	dec	r0
 4fa:	16 16       	cp	r1, r22
 4fc:	17 06       	cpc	r1, r23
 4fe:	18 06       	cpc	r1, r24
 500:	09 06       	cpc	r0, r25
 502:	08 95       	ret

00000504 <__fp_pscB>:
 504:	00 24       	eor	r0, r0
 506:	0a 94       	dec	r0
 508:	12 16       	cp	r1, r18
 50a:	13 06       	cpc	r1, r19
 50c:	14 06       	cpc	r1, r20
 50e:	05 06       	cpc	r0, r21
 510:	08 95       	ret

00000512 <__fp_round>:
 512:	09 2e       	mov	r0, r25
 514:	03 94       	inc	r0
 516:	00 0c       	add	r0, r0
 518:	11 f4       	brne	.+4      	; 0x51e <__fp_round+0xc>
 51a:	88 23       	and	r24, r24
 51c:	52 f0       	brmi	.+20     	; 0x532 <__fp_round+0x20>
 51e:	bb 0f       	add	r27, r27
 520:	40 f4       	brcc	.+16     	; 0x532 <__fp_round+0x20>
 522:	bf 2b       	or	r27, r31
 524:	11 f4       	brne	.+4      	; 0x52a <__fp_round+0x18>
 526:	60 ff       	sbrs	r22, 0
 528:	04 c0       	rjmp	.+8      	; 0x532 <__fp_round+0x20>
 52a:	6f 5f       	subi	r22, 0xFF	; 255
 52c:	7f 4f       	sbci	r23, 0xFF	; 255
 52e:	8f 4f       	sbci	r24, 0xFF	; 255
 530:	9f 4f       	sbci	r25, 0xFF	; 255
 532:	08 95       	ret

00000534 <_exit>:
 534:	f8 94       	cli

00000536 <__stop_program>:
 536:	ff cf       	rjmp	.-2      	; 0x536 <__stop_program>
